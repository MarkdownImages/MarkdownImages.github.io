<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>ZXWalk</title>
  <subtitle>不忘初心 方得始终</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://markdownimages.github.io/"/>
  <updated>2017-06-20T02:39:14.109Z</updated>
  <id>https://markdownimages.github.io/</id>
  
  <author>
    <name>祥子</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>git的使用</title>
    <link href="https://markdownimages.github.io/2017/06/19/%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3/iOS/%E5%B7%A5%E5%85%B7/git%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
    <id>https://markdownimages.github.io/2017/06/19/技术文档/iOS/工具/git的使用/</id>
    <published>2017-06-19T09:44:31.000Z</published>
    <updated>2017-06-20T02:39:14.109Z</updated>
    
    <content type="html"><![CDATA[<p>#git的使用</p>
<p><strong>git</strong>是一款免费、开源的分布式版本控制系统，用于敏捷高效地处理任何或小或大的项目。Git是一个开源的分布式版本控制系统，用以有效、高速的 处理从很小到非常大的项目版本管理。 Git 是 Linus Torvalds 为了帮助管理 Linux 内核开发而开发的一个开放源码的版本控制软件。这里附上一个不错的学习git的网站 <a href="http://git-scm.com/book/zh/v1" target="_blank" rel="external">git 使用手册</a></p>
<h2 id="一、配置git环境"><a href="#一、配置git环境" class="headerlink" title="一、配置git环境"></a>一、配置git环境</h2><p>1.打开终端， 直接输入， 先检查系统是否已经存在<a href="https://help.github.com/articles/generating-ssh-keys/" target="_blank" rel="external">SSH key</a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">cat ~/.ssh/id_rsa.pub然后回车</div></pre></td></tr></table></figure></p>
<p>2.不存在的话 创建一个新的SSH key， 这里一般使用的都是邮箱， 比如你的gitHub的邮箱呀什么的。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ssh-keygen -t rsa -C&quot;your_email@youremail.com&quot;</div></pre></td></tr></table></figure></p>
<p> 这里输入的过程中可能提示输入一个类似于密码的自定义的通行证号，如果直接回车则为空， 可能也会要你输入将要保存的路径，直接回车默认为当前路径。</p>
<p>3.创建成功之后， 在执行命令1拿到SSH key， 复制一下<br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="https://raw.githubusercontent.com/XZwalk/MarkdownImages/master/1.png" alt="Alt text" title="">
                </div>
                <div class="image-caption">Alt text</div>
            </figure></p>
<p>如图一长串的东西就是SSH Key</p>
<blockquote>
<p>一定要记得复制的时候包括<code>ssh-rsa</code></p>
</blockquote>
<p>4.将SSH key输入到GitHub网站中（以将远程仓库建立在gitHub中为例）<br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="https://raw.githubusercontent.com/XZwalk/MarkdownImages/master/2.png" alt="Alt text" title="">
                </div>
                <div class="image-caption">Alt text</div>
            </figure></p>
<p>如图设置一个标题， 然后把之前复制的一串东西粘贴进去就是了<br>5.测试是否能够正确链接到github中，输入以下命令：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ssh -T git@github.com</div></pre></td></tr></table></figure></p>
<p>将会显示一下信息<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">The authenticity of host &apos;github.com (207.97.227.239)&apos; can&apos;t be established. RSA key fingerprint is 16:27:ac:a5:76:28:2d:36:63:1b:56:4d:eb:df:a6:48. Are you sure you want to continue connecting (yes/no)?</div></pre></td></tr></table></figure></p>
<p>输入yes后，显示出下列信息表示连接成功<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Hi username! You&apos;ve successfully authenticated, but GitHub does not provide shell access.</div></pre></td></tr></table></figure></p>
<h2 id="二、配置git个人信息"><a href="#二、配置git个人信息" class="headerlink" title="二、配置git个人信息"></a>二、配置git个人信息</h2><p>1.设置用户名和邮箱<br>//配置名字<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git config --global user.name&quot;Firstname Lastname&quot;</div></pre></td></tr></table></figure></p>
<p>//配置邮箱<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git config --global user.email&quot;your_email@youremail.com&quot;</div></pre></td></tr></table></figure></p>
<p>//配置完以后检查配置是否正确<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git config -l（这个是小写的L）</div></pre></td></tr></table></figure></p>
<p>Git通过检测用户名和邮箱来跟踪进行commit的用户， 所以需要配置一下， 以区分不同用户的提交信息， 一般都是多人开发嘛</p>
<h2 id="三、新建一个git仓库的方法"><a href="#三、新建一个git仓库的方法" class="headerlink" title="三、新建一个git仓库的方法"></a>三、新建一个git仓库的方法</h2><p>1.使用xcode自带的方法创建<br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="https://raw.githubusercontent.com/XZwalk/MarkdownImages/master/3.jpg" alt="Alt text" title="">
                </div>
                <div class="image-caption">Alt text</div>
            </figure></p>
<p>打开Xcode，创建一个新的工程<br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="https://raw.githubusercontent.com/XZwalk/MarkdownImages/master/4.jpg" alt="Alt text" title="">
                </div>
                <div class="image-caption">Alt text</div>
            </figure></p>
<p>选择下一步，在项目名中输入你要创建的项目的名字<br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="https://raw.githubusercontent.com/XZwalk/MarkdownImages/master/5.jpg" alt="Alt text" title="">
                </div>
                <div class="image-caption">Alt text</div>
            </figure></p>
<p>点击下一步，也就是最后一个步骤，在这里先选择一个要保持工程的目录，然后在窗口底部选上Create git repository on (My Mac )<br>2.手动创建一个分支的方法</p>
<ul>
<li>cd 你要创建的文件夹路径</li>
<li>git init<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="https://raw.githubusercontent.com/XZwalk/MarkdownImages/master/6.png" alt="Alt text" title="">
                </div>
                <div class="image-caption">Alt text</div>
            </figure>
你会看到文件夹下有这样一个文件<br>到这里你就完成了一个git仓库的建立。</li>
</ul>
<h2 id="四、将git仓库推送到远程"><a href="#四、将git仓库推送到远程" class="headerlink" title="四、将git仓库推送到远程"></a>四、将git仓库推送到远程</h2><p>1、添加远程服务器<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git remote add origin git@github.com:gbyukg/zf-tutorial.git</div></pre></td></tr></table></figure></p>
<p>2、将你的项目文件夹直接拖到SourceTree里面<br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="https://raw.githubusercontent.com/XZwalk/MarkdownImages/master/7.png" alt="Alt text" title="">
                </div>
                <div class="image-caption">Alt text</div>
            </figure><br>图中GitDemo所示</p>
<p>3、直接在图形化界面里面操作就是了， 第一步可以直接push， 将工程文件推送到服务器上面。</p>
<h2 id="五、Xcode中的显示"><a href="#五、Xcode中的显示" class="headerlink" title="五、Xcode中的显示"></a>五、Xcode中的显示</h2><p>既然说到git主要用在代码的版本控制上， 那肯定与开发工具有着紧密的联系， 下面就来看一下， xcode上与git是怎么联系的</p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="https://raw.githubusercontent.com/XZwalk/MarkdownImages/master/8.png" alt="Alt text" title="">
                </div>
                <div class="image-caption">Alt text</div>
            </figure>
<p>常用的操作选项就是上面标出的地方。</p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="https://raw.githubusercontent.com/XZwalk/MarkdownImages/master/9.png" alt="Alt text" title="">
                </div>
                <div class="image-caption">Alt text</div>
            </figure>
<p>这里是去掉（回退）git操作记录的选项。</p>
<h2 id="六、git常用命令"><a href="#六、git常用命令" class="headerlink" title="六、git常用命令"></a>六、git常用命令</h2><p>虽然有SourceTree这样好用的图形化界面工具， 但是有些操作是它无法完成的， 或者说在上面操作容易出错的。下面介绍一下git操作常用的命令。</p>
<h3 id="远程仓库相关命令"><a href="#远程仓库相关命令" class="headerlink" title="远程仓库相关命令"></a>远程仓库相关命令</h3><h4 id="1-克隆一份代码到本地"><a href="#1-克隆一份代码到本地" class="headerlink" title="1. 克隆一份代码到本地"></a>1. 克隆一份代码到本地</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">cd 放置工程文件夹的目录</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git clone 代码的服务器的链接</div></pre></td></tr></table></figure>
<blockquote>
<p>克隆到本地之后， 以后就不用每次都用cd定位文件夹了， 可以直接在SourceTree上定位到当前仓库（SourceTree右上角的Terminal选项）</p>
</blockquote>
<h4 id="2-查看远程仓库"><a href="#2-查看远程仓库" class="headerlink" title="2. 查看远程仓库"></a>2. 查看远程仓库</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git remote -v</div></pre></td></tr></table></figure>
<h4 id="3-添加远程仓库"><a href="#3-添加远程仓库" class="headerlink" title="3. 添加远程仓库"></a>3. 添加远程仓库</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">git remote add origin [url]</div><div class="line">//此处的origin可以换成其他的任意名字, 即创建的远程仓库的名字， 下面的操作都要以这个名字为准</div></pre></td></tr></table></figure>
<h4 id="4-删除远程仓库"><a href="#4-删除远程仓库" class="headerlink" title="4. 删除远程仓库"></a>4. 删除远程仓库</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git remote rm origin</div></pre></td></tr></table></figure>
<h4 id="5-拉取远程仓库"><a href="#5-拉取远程仓库" class="headerlink" title="5. 拉取远程仓库"></a>5. 拉取远程仓库</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git pull origin [localBranchName]</div></pre></td></tr></table></figure>
<h4 id="6-推送远程仓库"><a href="#6-推送远程仓库" class="headerlink" title="6. 推送远程仓库"></a>6. 推送远程仓库</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git push origin [localBranchName]</div></pre></td></tr></table></figure>
<h5 id="github-push错误：403-Forbidden"><a href="#github-push错误：403-Forbidden" class="headerlink" title="github push错误：403 Forbidden"></a>github push错误：403 Forbidden</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">error: The requested URL returned error: 403 Forbidden while accessing https://github.com/wangz/future.git/info/refs  </div><div class="line">git version 1.7.1</div></pre></td></tr></table></figure>
<p>解决方案：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">//cd到仓库下</div><div class="line">vim .git/config</div></pre></td></tr></table></figure></p>
<p>修改<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">[remote &quot;origin&quot;]  </div><div class="line">    url = https://github.com/wangz/example.git  </div><div class="line">为：</div><div class="line">[remote &quot;origin&quot;]  </div><div class="line">    url = https://wangz@github.com/wangz/example.git</div></pre></td></tr></table></figure></p>
<p>再次git push，弹出框输入密码，即可提交</p>
<h4 id="7-添加某台电脑上的某个文件夹当做远程服务器"><a href="#7-添加某台电脑上的某个文件夹当做远程服务器" class="headerlink" title="7. 添加某台电脑上的某个文件夹当做远程服务器"></a>7. 添加某台电脑上的某个文件夹当做远程服务器</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git remote add 电脑名字+电脑ip+电脑上的某个文件</div></pre></td></tr></table></figure>
<blockquote>
<p>使用这个命令是为了给当前仓库添加一个远程服务器， 所以， 你首先必须有一个本地的仓库。<br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="https://raw.githubusercontent.com/XZwalk/MarkdownImages/master/10.png" alt="Alt text" title="">
                </div>
                <div class="image-caption">Alt text</div>
            </figure></p>
</blockquote>
<p>结果如下<br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="https://raw.githubusercontent.com/XZwalk/MarkdownImages/master/11.png" alt="Alt text" title="">
                </div>
                <div class="image-caption">Alt text</div>
            </figure></p>
<h3 id="分支-branch-操作相关命令"><a href="#分支-branch-操作相关命令" class="headerlink" title="分支(branch)操作相关命令"></a>分支(branch)操作相关命令</h3><h4 id="1-查看本地分支"><a href="#1-查看本地分支" class="headerlink" title="1. 查看本地分支"></a>1. 查看本地分支</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git branch</div></pre></td></tr></table></figure>
<h4 id="2-查看远程分支"><a href="#2-查看远程分支" class="headerlink" title="2. 查看远程分支"></a>2. 查看远程分支</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git branch -r</div></pre></td></tr></table></figure>
<h4 id="3-创建本地分支"><a href="#3-创建本地分支" class="headerlink" title="3. 创建本地分支"></a>3. 创建本地分支</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git branch [name] ----注意新分支创建后不会自动切换为当前分支</div></pre></td></tr></table></figure>
<h4 id="4-切换分支"><a href="#4-切换分支" class="headerlink" title="4. 切换分支"></a>4. 切换分支</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git checkout [name]</div></pre></td></tr></table></figure>
<h4 id="5-创建新分支并立即切换到新分支"><a href="#5-创建新分支并立即切换到新分支" class="headerlink" title="5. 创建新分支并立即切换到新分支"></a>5. 创建新分支并立即切换到新分支</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git checkout -b [name]</div></pre></td></tr></table></figure>
<h4 id="6-删除分支"><a href="#6-删除分支" class="headerlink" title="6. 删除分支"></a>6. 删除分支</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git branch -d [name] ---- -d选项只能删除已经参与了合并的分支，对于未有合并的分支是无法删除的。如果想强制删除一个分支，可以使用-D选项</div></pre></td></tr></table></figure>
<h4 id="7-合并分支"><a href="#7-合并分支" class="headerlink" title="7. 合并分支"></a>7. 合并分支</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git merge [name] ----将名称为[name]的分支与当前分支合并</div></pre></td></tr></table></figure>
<h4 id="8-创建远程分支-本地分支push到远程"><a href="#8-创建远程分支-本地分支push到远程" class="headerlink" title="8. 创建远程分支(本地分支push到远程)"></a>8. 创建远程分支(本地分支push到远程)</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git push origin [name]</div></pre></td></tr></table></figure>
<h4 id="9-删除远程分支"><a href="#9-删除远程分支" class="headerlink" title="9. 删除远程分支"></a>9. 删除远程分支</h4><p><strong>方式一：</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"> git push origin :[name]</div><div class="line">//如果省略 [本地分支]，那就等于是在说“在这里提取空白然后把它变成[远程分支]”,也就是删除了远程分支</div></pre></td></tr></table></figure></p>
<p><strong>方式二：</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git push origin -d [name]</div></pre></td></tr></table></figure></p>
<h3 id="ignore文件操作"><a href="#ignore文件操作" class="headerlink" title="ignore文件操作"></a>ignore文件操作</h3><p><strong>查看忽略文件</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">cat .gitignore</div></pre></td></tr></table></figure></p>
<p><strong>修改忽略文件</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">vi .gitignore</div><div class="line">这个指令是以只读的形式打开文件的,这个时候按键盘上的大部分按键都是无效的.如果想编写文件,需要下面的指令.</div><div class="line"></div><div class="line">//编写文件 </div><div class="line">开始编写的指令有两个,实现的效果是一样的.直接按键盘上的i或者a,这两个指令的作用都是让编辑器进入对文件的编辑状态</div><div class="line">//保存退出 </div><div class="line">在编辑状态按Esc键,会回到打开文件的状态,这个时候输入:wq(就是write And quite的意思)就会保存并退出Vi编辑器.</div></pre></td></tr></table></figure></p>
<h4 id="1-对已经提交过的文件执行ignore"><a href="#1-对已经提交过的文件执行ignore" class="headerlink" title="1.对已经提交过的文件执行ignore"></a>1.对已经提交过的文件执行ignore</h4><p>如果出现已经 commit 过的文件无法被忽略，那么需要执行：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">git rm &lt;FILENAME&gt;</div><div class="line">如果执行失败，则可能需要强制移除，执行git rm -r -f &lt;FILENAME&gt;</div></pre></td></tr></table></figure>
<p>之后提交推送，此后 .gitignore 才会对此文件生效。原因是 .gitignore 只会对没有被 git 记录过的文件生效，也就是 untracked file。</p>
<h4 id="2-对未commit的文件执行ignore"><a href="#2-对未commit的文件执行ignore" class="headerlink" title="2.对未commit的文件执行ignore"></a>2.对未commit的文件执行ignore</h4><p>直接执行上面的修改忽略文件就可以。</p>
<h3 id="回退代码相关操作"><a href="#回退代码相关操作" class="headerlink" title="回退代码相关操作"></a>回退代码相关操作</h3><h4 id="1-回退代码到某个版本-保留吐出的代码"><a href="#1-回退代码到某个版本-保留吐出的代码" class="headerlink" title="1. 回退代码到某个版本, 保留吐出的代码"></a>1. 回退代码到某个版本, 保留吐出的代码</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git reset 1b30859</div></pre></td></tr></table></figure>
<h4 id="2-回退代码到某个版本-不保留吐出的代码"><a href="#2-回退代码到某个版本-不保留吐出的代码" class="headerlink" title="2. 回退代码到某个版本, 不保留吐出的代码"></a>2. 回退代码到某个版本, 不保留吐出的代码</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git reset --hard 1b30859</div></pre></td></tr></table></figure>
<h4 id="3-回滚之前提交的某个点，-生成一个新的提交点"><a href="#3-回滚之前提交的某个点，-生成一个新的提交点" class="headerlink" title="3. 回滚之前提交的某个点， 生成一个新的提交点"></a>3. 回滚之前提交的某个点， 生成一个新的提交点</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git revert 1b30859</div></pre></td></tr></table></figure>
<p>如果这个点是之前<code>merge</code>的点，<code>Git</code>会抱怨：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">is a merge but no -m option was given</div></pre></td></tr></table></figure></p>
<p>这是因为你<code>revert</code>的那个<code>commit</code>是一个<code>merge commit</code>，它有两个<code>parent</code>, <code>Git</code>不知道<code>base</code>是选哪个<code>parent</code>，就没法<code>diff</code>，所以就抱怨了，所以你要显示告诉<code>Git</code>用哪一个<code>parent</code>。</p>
<p>一般来说，如果你在<code>master</code>上<code>merge</code>  develop,那么<code>parent 1</code>就是<code>master</code>，<code>parent 2</code>就是<code>develop</code>.</p>
<p>所以你需要执行这样的<code>revert</code>命令:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">//如果你现在在master上， 它的意思就是将这个点从master上回退掉</div><div class="line">git revert 1b30859 -m 1</div></pre></td></tr></table></figure></p>
<p>此时使用下面命令可以详细查看相应的父分支的点：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">git show 1b30859</div><div class="line">//Merge: 312a518 fa87415 //312a518和fa87415 可以在git log中找到对应的提交信息</div></pre></td></tr></table></figure></p>
<p><code>revert</code>点g的前后效果图：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">a -&gt; b -&gt; c -&gt; f -- g -&gt; h (master)</div><div class="line">           \      /</div><div class="line">            d -&gt; e  (dev)</div></pre></td></tr></table></figure></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">a -&gt; b -&gt; c -&gt; f -- g -&gt; h -&gt; G (master)</div><div class="line">           \      /</div><div class="line">            d -&gt; e  (dev)</div></pre></td></tr></table></figure>
<p>其中<code>G</code> 是撤销 <code>g</code> 生成的 <code>commit</code>。通过 <code>git show G</code> 之后，我们会发现 <code>G</code> 是一个常规提交，内容就是撤销 <code>merge</code> 时被丢弃的那条线索的所有<code>commit</code> 的「反操作」的合集。</p>
<h4 id="4-取消某次merge的内容"><a href="#4-取消某次merge的内容" class="headerlink" title="4. 取消某次merge的内容"></a>4. 取消某次merge的内容</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git merge --abort</div></pre></td></tr></table></figure>
<h3 id="分支编辑"><a href="#分支编辑" class="headerlink" title="分支编辑"></a>分支编辑</h3><h4 id="1-如果当前分支既有未从远程pull下来的代码，-又有本地已经commit的代码，-即分支上出现一上一下箭头，-采用如下命令"><a href="#1-如果当前分支既有未从远程pull下来的代码，-又有本地已经commit的代码，-即分支上出现一上一下箭头，-采用如下命令" class="headerlink" title="1. 如果当前分支既有未从远程pull下来的代码， 又有本地已经commit的代码， 即分支上出现一上一下箭头， 采用如下命令"></a>1. 如果当前分支既有未从远程pull下来的代码， 又有本地已经commit的代码， 即分支上出现一上一下箭头， 采用如下命令</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git rebase origin/develop</div></pre></td></tr></table></figure>
<blockquote>
<p>rebase的原理相当于三步：</p>
<pre><code>1. 将我们的分支退回到上次和服务器同步时的状态  即 reset
2. 将reset之后的代码Stash一份
3. 与服务器进行同步，同步之后再将原来的Stash的代码吐出来和与服务器同步之后的代码进行合并
</code></pre></blockquote>
<p>这样就不会造成下面的出现拐角的分支（也就是说我们在进行push的时候发现服务器里面有新代码，这时候不要执行pull命令。而是执行rebase命令则会将分支成一条直线）</p>
<h4 id="2-想在某条分支上移动某个分支"><a href="#2-想在某条分支上移动某个分支" class="headerlink" title="2. 想在某条分支上移动某个分支"></a>2. 想在某条分支上移动某个分支</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">      A---B---C topic</div><div class="line">     /</div><div class="line">D---E---F---G develop</div></pre></td></tr></table></figure>
<p>例如有一条分支develop，topic是从develop上拉出来的分支，这时候我想把topic分支从E点移动到F点，那要怎么操作呢？</p>
<ol>
<li>第一步：先将分支切到F点，暂且叫做temp分支。</li>
<li>使用命令<code>git rebase temp topic</code>.此时topic分支会被移动到F点，且分支已被切换到topic分支，但是此时topic分支可能显示不正常有上下箭头，这是因为切换的这个topic分支已经不是原来的topic分支了，git创建了一个全新的分支并命名为topic，所以此时需要把远程的topic分支删掉，然后将本地的topic分支push到远程，则万事大吉了。</li>
</ol>
<p>执行之后会得到如下的结果：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">          A---B---C topic</div><div class="line">         /</div><div class="line">D---E---F---G develop</div></pre></td></tr></table></figure></p>
<blockquote>
<p>NOTE<br><a href="https://git-scm.com/docs/git-rebase" target="_blank" rel="external">git-rebase - Reapply commits on top of another base tip</a></p>
</blockquote>
<h4 id="3-想将某条分支上拉出的分支移动到另一个分支的某个点"><a href="#3-想将某条分支上拉出的分支移动到另一个分支的某个点" class="headerlink" title="3. 想将某条分支上拉出的分支移动到另一个分支的某个点"></a>3. 想将某条分支上拉出的分支移动到另一个分支的某个点</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">                        H---I---J topicB</div><div class="line">                       /</div><div class="line">              E---F---G  topicA</div><div class="line">             /</div><div class="line">A---B---C---D  develop</div></pre></td></tr></table></figure>
<p>例如有一条分支develop，从develop上拉出了一条分支topicA，从topicA分支上拉出了一条分支topicB,此时如果我想将topicB分支移动到develop上的C点怎么操作呢？</p>
<ol>
<li>第一步：先将分支切到C点，暂且叫做temp分支。</li>
<li>使用命令<code>git rebase --onto temp topicA topicB</code>。<br>意思就是将目前存在于topicA上的分支topicB移动到temp分支上，也就是移动到develop分支上的C点。</li>
<li>合并过程中如果有冲突则会立马停止，这时候要去解决冲突，解决完冲突之后使用命令<code>rebase --continue</code>继续分支分编辑操作。</li>
</ol>
<p><strong>注意</strong><br>一定要注意，如果分支像下面这样,<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">                        H---I---J topicB</div><div class="line">                       /         \</div><div class="line">              E---F---G---K---L---M---N---O---P  topicA</div><div class="line">             /</div><div class="line">A---B---C---D  develop</div></pre></td></tr></table></figure></p>
<p>此时想要将topicB分支移动到develop上的C点，就不能直接那么干了，不然你会发现坑大了，如果你还是按上面的操作，你会发现分支变成了下面这样：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">              E---F---G---K---L---M---N---O---P  topicA</div><div class="line">             /</div><div class="line">A---B---C---D  develop</div><div class="line">         \ </div><div class="line">          H---I---J---M---N---O---P  topicB</div></pre></td></tr></table></figure></p>
<p>为什么会这样呢？<br>推测：<code>git rebase --onto temp topicA topicB</code>这个命令可能是把topicA从topicB分支上的起始点开始到终点（露头的点），也就是包含topicB上的几个点。</p>
<blockquote>
<p>NOTE<br>对于想要使用<code>git rebase --onto temp topicA topicB</code>该命令一定是露头的分支，不能是起始点在某个分支上，同时该分支也被merge到了该分支上。如果是这样的就需要先把该分支已经merge的点退掉，将需要迁移的分支漏出来，再进行编辑。（怀疑如果是merge到了其他分支上应该是没问题的，这个没试过，暂不确定）</p>
</blockquote>
<p><strong>参考</strong>：<br><a href="https://git-scm.com/docs/git-rebase" target="_blank" rel="external">git-rebase - Reapply commits on top of another base tip</a></p>
<h3 id="其他操作"><a href="#其他操作" class="headerlink" title="其他操作"></a>其他操作</h3><h4 id="1-想要对之前已经进行过git-ignore操作的文件再次添加进git管理中，-执行如下操作"><a href="#1-想要对之前已经进行过git-ignore操作的文件再次添加进git管理中，-执行如下操作" class="headerlink" title="1. 想要对之前已经进行过git ignore操作的文件再次添加进git管理中， 执行如下操作"></a>1. 想要对之前已经进行过git ignore操作的文件再次添加进git管理中， 执行如下操作</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git add 文件路径 -f</div></pre></td></tr></table></figure>
<h4 id="2-强制push某个点到远程"><a href="#2-强制push某个点到远程" class="headerlink" title="2. 强制push某个点到远程"></a>2. 强制push某个点到远程</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git push --force origin develop</div></pre></td></tr></table></figure>
<blockquote>
<p><code>此命令小心使用</code></p>
</blockquote>
<h4 id="3-第一次将从某个分支拉出来的分支合到这个分支上的时候，-容易出现拉成直线的情况，-这时候要执行下面的操作"><a href="#3-第一次将从某个分支拉出来的分支合到这个分支上的时候，-容易出现拉成直线的情况，-这时候要执行下面的操作" class="headerlink" title="3. 第一次将从某个分支拉出来的分支合到这个分支上的时候， 容易出现拉成直线的情况， 这时候要执行下面的操作"></a>3. 第一次将从某个分支拉出来的分支合到这个分支上的时候， 容易出现拉成直线的情况， 这时候要执行下面的操作</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git merge --no-ff -m &quot;货基转股基_4.90.01&quot; 货基转股基_4.90.01</div></pre></td></tr></table></figure>
<blockquote>
<p>这句命令的意思就是：(假设目前在develop分支上) 这是第一次merge,  我想要把 货基转股基_4.90.01 分支merge到develop分支上。 <code>--no-ff</code>参数，表示禁用<code>Fast forward</code>, 因为本次合并要创建一个新的commit，所以加上<code>-m</code>参数，把commit描述写进去。</p>
</blockquote>
<p>这里还有一种简单的方法， 直接在界面操作<br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="https://raw.githubusercontent.com/XZwalk/MarkdownImages/master/12.png" alt="Alt text" title="">
                </div>
                <div class="image-caption">Alt text</div>
            </figure><br>第一次merge的时候只要打上这个勾勾就可以了。</p>
<h4 id="4-删除本地SourceTree中远程分支目录里面已经被删除的分支"><a href="#4-删除本地SourceTree中远程分支目录里面已经被删除的分支" class="headerlink" title="4. 删除本地SourceTree中远程分支目录里面已经被删除的分支"></a>4. 删除本地SourceTree中远程分支目录里面已经被删除的分支</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git fetch -p</div></pre></td></tr></table></figure>
<blockquote>
<p>它的意思就是在fetch之后删除掉没有与远程分支对应的本地分支。</p>
</blockquote>
<h4 id="5-重命名远程分支"><a href="#5-重命名远程分支" class="headerlink" title="5. 重命名远程分支"></a>5. 重命名远程分支</h4><p>在git中重命名远程分支，其实就是先删除远程分支，然后重命名本地分支，再重新提交一个远程分支。</p>
<h4 id="6-从Git仓库中恢复已删除的分支或丢失的commit"><a href="#6-从Git仓库中恢复已删除的分支或丢失的commit" class="headerlink" title="6. 从Git仓库中恢复已删除的分支或丢失的commit"></a>6. 从Git仓库中恢复已删除的分支或丢失的commit</h4><p>使用这条命令的前提是你曾经将这个点提交过或者push过<br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="https://raw.githubusercontent.com/MarkdownImages/MarkdownImages/master/%E5%B9%B3%E5%B8%B8%E9%9B%B6%E6%95%A3%E5%9B%BE/git%E6%89%BE%E5%9B%9E%E5%8E%86%E5%8F%B2%E8%AE%B0%E5%BD%95.png" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure></p>
<h4 id="7-关于vim窗口的使用"><a href="#7-关于vim窗口的使用" class="headerlink" title="7. 关于vim窗口的使用"></a>7. 关于vim窗口的使用</h4><p>开始用git commit 提交的时候是用 -m “message”的</p>
<p>后来直接用git commit 回车后弹出一个窗口，后来才知道是linux下的文本编辑器</p>
<p>郁闷的是半天退出不出来，baidu，google一番，</p>
<p>进入之后是VIM的普通模式，按 i 键，进入INSERT模式，这是可以输入message了。</p>
<p>输入完成之后，按ESC键进入命令模式 ，输入冒号（在窗口下面显示），然后输入x，回车就OK了。</p>
<h4 id="8-解决github-push错误The-requested-URL-returned-error-403-Forbidden-while-accessing"><a href="#8-解决github-push错误The-requested-URL-returned-error-403-Forbidden-while-accessing" class="headerlink" title="8. 解决github push错误The requested URL returned error: 403 Forbidden while accessing"></a>8. 解决github push错误The requested URL returned error: 403 Forbidden while accessing</h4><p>cd到你的代码路径下<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">vim .Git/config</div></pre></td></tr></table></figure></p>
<p>修改<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">[remote &quot;origin&quot;]  </div><div class="line">    url = https://github.com/wangxiusen/wangxiusen.github.io.git</div></pre></td></tr></table></figure></p>
<p>为<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">[remote &quot;origin&quot;]  </div><div class="line">    url = https://wangxiusen@github.com/wangxiusen/wangxiusen.github.io.git</div></pre></td></tr></table></figure></p>
<p>然后<code>ESC</code> <code>:wq</code>保存退出。<br>再次<code>git push</code>，弹出框输入密码，即可提交。</p>
<h2 id="七、git命令合集"><a href="#七、git命令合集" class="headerlink" title="七、git命令合集"></a>七、git命令合集</h2><p>一张酷图帮你收集齐所有git命令<br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="https://raw.githubusercontent.com/XZwalk/MarkdownImages/master/13.jpg" alt="Alt text" title="">
                </div>
                <div class="image-caption">Alt text</div>
            </figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;#git的使用&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;git&lt;/strong&gt;是一款免费、开源的分布式版本控制系统，用于敏捷高效地处理任何或小或大的项目。Git是一个开源的分布式版本控制系统，用以有效、高速的 处理从很小到非常大的项目版本管理。 Git 是 Linus Torval
    
    </summary>
    
      <category term="工具" scheme="https://markdownimages.github.io/categories/%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="git" scheme="https://markdownimages.github.io/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>Linux下搭建Hexo博客</title>
    <link href="https://markdownimages.github.io/2017/06/15/Hexo/Linux%E4%B8%8B%E6%90%AD%E5%BB%BAHexo%E5%8D%9A%E5%AE%A2/"/>
    <id>https://markdownimages.github.io/2017/06/15/Hexo/Linux下搭建Hexo博客/</id>
    <published>2017-06-15T02:21:31.000Z</published>
    <updated>2017-06-19T09:36:10.325Z</updated>
    
    <content type="html"><![CDATA[<p>#　Linux下搭建Hexo博客</p>
<h2 id="1-安装Node-js-4-4-4"><a href="#1-安装Node-js-4-4-4" class="headerlink" title="1.安装Node.js-4.4.4"></a>1.安装Node.js-4.4.4</h2><p>这里4.4.4是目前的稳定版，你可以去官网下载最新的稳定版下载</p>
<h3 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">wget https://nodejs.org/dist/v4.4.4/node-v4.4.4-linux-x64.tar.xz</div></pre></td></tr></table></figure>
<h3 id="解压"><a href="#解压" class="headerlink" title="解压"></a>解压</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">xz -d node-v4.4.4-linux-x64.tar.xz tar -xvf node-v4.4.4-linux-x64.tar</div></pre></td></tr></table></figure>
<h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">//新建文件夹并移动</div><div class="line">mv node-v4.4.4-linux-x64 node-v4.4.4</div><div class="line">//将node.js解压的文件移动到系统目录</div><div class="line">mv node-v4.4.4 /usr/local/node</div></pre></td></tr></table></figure>
<p>配置环境变量<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"># 编辑 /etc/profile (使用vim)</div><div class="line">vim /etc/profile</div><div class="line"># 在底部添加 PATH 变量</div><div class="line">export PATH=$PATH:/usr/local/node/bin</div><div class="line"># 保存退出，先按exit键，再按shift+:</div><div class="line">wq</div><div class="line"># 最后保存，使其生效即可</div><div class="line">source /etc/profile</div><div class="line">验证，命令行输入npm -version,安装成功会输出版本号</div></pre></td></tr></table></figure></p>
<h2 id="2-安装Hexo"><a href="#2-安装Hexo" class="headerlink" title="2.安装Hexo"></a>2.安装Hexo</h2><p>安装这个可以不使用root用户，但是全局安装时需要管理员权限，现在目录依旧是/home/Zing下，用户是Zing<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">安装Git(已安装可跳过)</div><div class="line">apt-get install git</div><div class="line">安装hexo</div><div class="line"># 创建目录</div><div class="line">mkdir hexo</div><div class="line"># 切换目录</div><div class="line">cd hexo</div><div class="line"># 全局安装 Hexo，需要最高权限，记得输入root密码</div><div class="line">sudo npm install -g hexo-cli</div><div class="line"># 初始化 Hexo</div><div class="line">hexo init</div></pre></td></tr></table></figure></p>
<p>安装插件<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">npm install hexo-generator-index --save</div><div class="line">npm install hexo-generator-archive --save</div><div class="line">npm install hexo-generator-category --save</div><div class="line">npm install hexo-generator-tag --save</div><div class="line">npm install hexo-server --save</div><div class="line">npm install hexo-deployer-git --save</div><div class="line">npm install hexo-deployer-heroku --save</div><div class="line">npm install hexo-deployer-rsync --save</div><div class="line">npm install hexo-deployer-openshift --save</div><div class="line">npm install hexo-renderer-marked --save</div><div class="line">npm install hexo-renderer-stylus --save</div><div class="line">npm install hexo-generator-feed --save</div><div class="line">npm install hexo-generator-sitemap --save</div></pre></td></tr></table></figure></p>
<p>测试安装成功<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo server</div></pre></td></tr></table></figure></p>
<p>成成功会有下图提示：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">(node:6520) [DEP0061] DeprecationWarning: fs.SyncWriteStream is deprecated.</div><div class="line">INFO  Start processing</div><div class="line">INFO  Hexo is running at http://localhost:4000/. Press Ctrl+C to stop.</div></pre></td></tr></table></figure></p>
<p>成功！</p>
<p>没有提示，请重新安装<br>浏览器输入 <code>http://0.0.0.0:4000</code> 可以访问到首页<br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://upload-images.jianshu.io/upload_images/1112615-22ff8076064da55f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure></p>
<h3 id="修改Hexo配置文件"><a href="#修改Hexo配置文件" class="headerlink" title="修改Hexo配置文件"></a>修改Hexo配置文件</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div></pre></td><td class="code"><pre><div class="line"># Hexo Configuration</div><div class="line">## Docs: https://hexo.io/docs/configuration.html</div><div class="line">## Source: https://github.com/hexojs/hexo/</div><div class="line"></div><div class="line"># Site 站点信息设置</div><div class="line">title: ZXWalk</div><div class="line">subtitle: 不忘初心 方得始终</div><div class="line">description: 我是一只小小小小鸟......</div><div class="line">author: 祥子</div><div class="line">language: zh-CN</div><div class="line">timezone:</div><div class="line"></div><div class="line"># URL 链接设置</div><div class="line">## If your site is put in a subdirectory, set url as &apos;http://yoursite.com/child&apos; and root as &apos;/child/&apos;</div><div class="line">url: https://markdownimages.github.io</div><div class="line">root: /</div><div class="line">permalink: :year/:month/:day/:title/</div><div class="line">permalink_defaults:</div><div class="line"></div><div class="line"># Directory 文件目录</div><div class="line">source_dir: source</div><div class="line">public_dir: public</div><div class="line">tag_dir: tags</div><div class="line">archive_dir: archives</div><div class="line">category_dir: categories</div><div class="line">code_dir: downloads/code</div><div class="line">i18n_dir: :lang</div><div class="line">skip_render:</div><div class="line"></div><div class="line"># Writing 文章</div><div class="line">new_post_name: :title.md # File name of new posts</div><div class="line">default_layout: post</div><div class="line">titlecase: false # Transform title into titlecase</div><div class="line">external_link: true # Open external links in new tab</div><div class="line">filename_case: 0</div><div class="line">render_drafts: false</div><div class="line">post_asset_folder: false</div><div class="line">relative_link: false</div><div class="line">future: true</div><div class="line">highlight:</div><div class="line">  enable: true</div><div class="line">  line_number: true</div><div class="line">  auto_detect: false</div><div class="line">  tab_replace:</div><div class="line"></div><div class="line"># Category &amp; Tag</div><div class="line">default_category: uncategorized</div><div class="line">category_map:</div><div class="line">tag_map:</div><div class="line"></div><div class="line"># Date / Time format 日期</div><div class="line">## Hexo uses Moment.js to parse and display date</div><div class="line">## You can customize the date format as defined in</div><div class="line">## http://momentjs.com/docs/#/displaying/format/</div><div class="line">date_format: YYYY-MM-DD</div><div class="line">time_format: HH:mm:ss</div><div class="line"></div><div class="line"># Pagination 分页</div><div class="line">## Set per_page to 0 to disable pagination</div><div class="line">per_page: 8</div><div class="line">pagination_dir: page</div><div class="line"></div><div class="line"># Extensions 扩展</div><div class="line">## Plugins: https://hexo.io/plugins/</div><div class="line">## Themes: https://hexo.io/themes/</div><div class="line">theme: indigo</div><div class="line"></div><div class="line"># Deployment 这里设置了Git获</div><div class="line">#这里一定要注意不要写错了，否则部署到Github上会出问题</div><div class="line">## Docs: https://hexo.io/docs/deployment.html</div><div class="line">deploy:</div><div class="line">  type: git</div><div class="line">  repo:</div><div class="line">    github: git@github.com:MarkdownImages/MarkdownImages.github.io.git</div><div class="line">    coding: https://git.coding.net/ZXWalk/ZXWalk.git</div><div class="line">  branch: master</div><div class="line">#  repo: https://git.oschina.net/XZwalk/zxwalk.git</div><div class="line">  message: &apos;站点更新:&#123;&#123;now(&quot;YYYY-MM-DD HH/mm/ss&quot;)&#125;&#125;&apos;</div></pre></td></tr></table></figure>
<h2 id="3-部署到github"><a href="#3-部署到github" class="headerlink" title="3.部署到github"></a>3.部署到github</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">初始化Git设置（设置用户名和邮箱）</div><div class="line">生成SSH秘钥将，SSH秘钥配置到github上</div><div class="line">在github上创建 用户名.github.io的仓库。并且编辑Hexo的_config.yml文件，配置好git提交仓库地址</div><div class="line">编译Hexo的MarkDown 文章，部署到github上</div><div class="line">用户名一定是你github上的用户名！切记！</div></pre></td></tr></table></figure>
<p>编译<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">//可以简化为hexo g</div><div class="line">hexo generate</div></pre></td></tr></table></figure></p>
<p>发布<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">//可以简化为hexo d</div><div class="line">hexo deploy</div></pre></td></tr></table></figure></p>
<h2 id="4-选择主题"><a href="#4-选择主题" class="headerlink" title="4.选择主题"></a>4.选择主题</h2><h3 id="安装主题NexT"><a href="#安装主题NexT" class="headerlink" title="安装主题NexT"></a>安装主题NexT</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git clone https://github.com/iissnan/hexo-theme-next themes/next</div></pre></td></tr></table></figure>
<p>并在目录hexo下的_config.yml中<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"># 找到 theme: 修改后面的参数，默认是 landscape</div><div class="line">theme: next</div></pre></td></tr></table></figure></p>
<h3 id="找主题"><a href="#找主题" class="headerlink" title="找主题"></a>找主题</h3><p><a href="https://hexo.io/themes/" target="_blank" rel="external">https://hexo.io/themes/</a></p>
<h2 id="遇到问题"><a href="#遇到问题" class="headerlink" title="遇到问题"></a>遇到问题</h2><h3 id="1-安装插件的时候提示更新npm"><a href="#1-安装插件的时候提示更新npm" class="headerlink" title="1. 安装插件的时候提示更新npm"></a>1. 安装插件的时候提示更新npm</h3><p>如果node不是最新的，node有一个模块叫n，是专门用来管理node.js的版本的。使用npm（NPM是随同nodejs一起安装的包管理工具）安装n模块<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo npm install -g n</div></pre></td></tr></table></figure></p>
<p>然后，升级node.js到最新稳定版<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo n stable</div></pre></td></tr></table></figure></p>
<p>执行上面的命令的时候报错<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">sudo: npm：找不到命令</div><div class="line">执行命令sudo apt-get install npm  即可</div></pre></td></tr></table></figure></p>
<h3 id="2-hexo-deploy时重复输入用户名密码的问题"><a href="#2-hexo-deploy时重复输入用户名密码的问题" class="headerlink" title="2.hexo deploy时重复输入用户名密码的问题"></a>2.hexo deploy时重复输入用户名密码的问题</h3><p>最主要的原因可能是你木有采用<code>git@github.com</code>而是用<code>https//github.com</code>。<br>修改后重新提交部署即可。</p>
<h3 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">//新建一篇文章</div><div class="line">hexo new &quot;My New Post&quot;</div><div class="line"></div><div class="line">//测试</div><div class="line">hexo server</div><div class="line"></div><div class="line">//编译</div><div class="line">hexo g</div><div class="line"></div><div class="line">//发布</div><div class="line">hexo d</div></pre></td></tr></table></figure>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://linux.cn/article-5766-1.html" target="_blank" rel="external">在Ubuntu下安装Node.JS的不同方式</a><br><a href="http://www.jianshu.com/p/dd111ea16f4d" target="_blank" rel="external">Ubuntu下搭建Hexo + github 博客</a><br><a href="http://www.jianshu.com/p/0823e387c019" target="_blank" rel="external">CentOS下搭建Hexo + github 博客</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;#　Linux下搭建Hexo博客&lt;/p&gt;
&lt;h2 id=&quot;1-安装Node-js-4-4-4&quot;&gt;&lt;a href=&quot;#1-安装Node-js-4-4-4&quot; class=&quot;headerlink&quot; title=&quot;1.安装Node.js-4.4.4&quot;&gt;&lt;/a&gt;1.安装Node.js
    
    </summary>
    
      <category term="Hexo" scheme="https://markdownimages.github.io/categories/Hexo/"/>
    
    
      <category term="Linux" scheme="https://markdownimages.github.io/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>Ubuntu安装常用软件</title>
    <link href="https://markdownimages.github.io/2017/06/10/Linux/Ubuntu%E5%AE%89%E8%A3%85%E5%B8%B8%E7%94%A8%E8%BD%AF%E4%BB%B6/"/>
    <id>https://markdownimages.github.io/2017/06/10/Linux/Ubuntu安装常用软件/</id>
    <published>2017-06-10T13:21:31.000Z</published>
    <updated>2017-06-15T02:30:08.529Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Ubuntu安装常用软件"><a href="#Ubuntu安装常用软件" class="headerlink" title="Ubuntu安装常用软件"></a>Ubuntu安装常用软件</h1><h2 id="安装软件"><a href="#安装软件" class="headerlink" title="安装软件"></a>安装软件</h2><h3 id="1-安装搜狗输入法"><a href="#1-安装搜狗输入法" class="headerlink" title="1.安装搜狗输入法"></a>1.安装搜狗输入法</h3><p>Linux版的搜狗输入法和Fcitx有冲突，在安装前移除fcitx：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">//这里的命令就是*</div><div class="line">sudo apt remove fcitx*</div><div class="line">sudo apt autoremove</div></pre></td></tr></table></figure></p>
<p>下载安装包，搜狗提供32位和64位版：<a href="http://pinyin.sogou.com/linux/?r=pinyin" target="_blank" rel="external">http://pinyin.sogou.com/linux/?r=pinyin</a></p>
<p>可以直接双击下载的deb包安装，或执行命令：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">sudo dpkg -i sogoupinyin*.deb</div><div class="line">sudo apt -f install</div></pre></td></tr></table></figure></p>
<p>安装完成之后，重启系统。</p>
<h3 id="2-安装git"><a href="#2-安装git" class="headerlink" title="2.安装git"></a>2.安装git</h3><p><strong>安装配置git服务器：</strong><br>（1）安装ssh：<code>sudo apt-get install openssh-server openssh-client</code><br>（2）启动ssh服务：<code>sudo /etc/init.d/ssh restart</code><br>（3）安装git服务器：<code>sudo apt-get install git-core</code></p>
<p><strong>配置ssh公钥</strong><br>（1）本地生成ssh公钥：<code>ssh-keygen -C &#39;你的邮箱地址&#39; -t rsa</code>。</p>
<blockquote>
<p>NOTE<br>这条命令会在当前用户目录<code>~/.ssh/</code>下生成密钥文件。<br> (2) 查看ssh key，可以使用<code>cat ~/.ssh/id_rsa.pub</code>命令。</p>
</blockquote>
<p><strong>每次提交都输入密码的解决办法</strong><br>（1）cd 回车；进入当前用户目录下；<br>（2）<code>vim .git-credentials</code> （如果没有安装vim 用其它编辑器也可以或 sudo apt-get install vim 安装一个）<br>（3）按照以下格式输入内容：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">//其中username，password，github.com 都换成你自己的内容</div><div class="line">https://&#123;username&#125;：&#123;password&#125;@github.com</div></pre></td></tr></table></figure></p>
<p>（4）保存退出后执行下面命令<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git config --global credential.helper store</div></pre></td></tr></table></figure></p>
<p><strong>解决github push错误The requested URL returned error: 403 Forbidden while accessing</strong><br>cd到你的代码路径下<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">vim .Git/config</div></pre></td></tr></table></figure></p>
<p>修改<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">[remote &quot;origin&quot;]  </div><div class="line">    url = https://github.com/wangxiusen/wangxiusen.github.io.git</div></pre></td></tr></table></figure></p>
<p>为<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">[remote &quot;origin&quot;]  </div><div class="line">    url = https://wangxiusen@github.com/wangxiusen/wangxiusen.github.io.git</div></pre></td></tr></table></figure></p>
<p>然后<code>ESC</code> <code>:wq</code>保存退出。</p>
<p>再次<code>git push</code>，弹出框输入密码，即可提交。</p>
<h3 id="3-安装谷歌浏览器"><a href="#3-安装谷歌浏览器" class="headerlink" title="3.安装谷歌浏览器"></a>3.安装谷歌浏览器</h3><p>1.在终端中，输入以下命令：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo wget http://www.linuxidc.com/files/repo/google-chrome.list -P /etc/apt/sources.list.d/</div></pre></td></tr></table></figure></p>
<p>将下载源加入到系统的源列表。</p>
<blockquote>
<p>NOTE<br>如果返回“地址解析错误”等信息，可以百度搜索其他提供 Chrome 下载的源，用其地址替换掉命令中的地址。</p>
</blockquote>
<p>2.在终端中，输入以下命令：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">wget -q -O - https://dl.google.com/linux/linux_signing_key.pub  | sudo apt-key add -</div></pre></td></tr></table></figure></p>
<p>导入谷歌软件的公钥，用于下面步骤中对下载软件进行验证。如果顺利的话，命令将返回“OK”。</p>
<p>3.在终端中，输入以下命令：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo apt-get update</div></pre></td></tr></table></figure></p>
<p>用于对当前系统的可用更新列表进行更新。这也是许多 Linux 发行版经常需要执行的操作，目的是随时获得最新的软件版本信息。</p>
<p>4.在终端中，输入以下命令：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo apt-get install google-chrome-stable</div></pre></td></tr></table></figure></p>
<p>执行对谷歌 Chrome 浏览器（稳定版）的安装。</p>
<p>5.最后，如果一切顺利，在终端中执行以下命令：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">/usr/bin/google-chrome-stable</div></pre></td></tr></table></figure></p>
<p>将会启动谷歌 Chrome 浏览器，它的图标将会出现在屏幕左侧的 Launcher上，在图标上右键——“锁定到启动器”，以后就可以简单地单击启动了。也可以将图标托往屏幕左侧的 Launcher 上.</p>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="http://blog.topspeedsnail.com/archives/6955" target="_blank" rel="external">Ubuntu 16.04安装搜狗输入法</a><br><a href="http://www.linuxidc.com/Linux/2016-12/137911.htm" target="_blank" rel="external">git安装</a><br><a href="http://www.xitongzhijia.net/xtjc/20160318/69233.html" target="_blank" rel="external">Ubuntu系统中git每次提交都要输入密码怎么办？</a><br><a href="http://www.linuxidc.com/Linux/2016-05/131096.htm" target="_blank" rel="external">Ubuntu 16.04下安装64位谷歌Chrome浏览器</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Ubuntu安装常用软件&quot;&gt;&lt;a href=&quot;#Ubuntu安装常用软件&quot; class=&quot;headerlink&quot; title=&quot;Ubuntu安装常用软件&quot;&gt;&lt;/a&gt;Ubuntu安装常用软件&lt;/h1&gt;&lt;h2 id=&quot;安装软件&quot;&gt;&lt;a href=&quot;#安装软件&quot; cla
    
    </summary>
    
      <category term="Linux" scheme="https://markdownimages.github.io/categories/Linux/"/>
    
    
      <category term="Linux" scheme="https://markdownimages.github.io/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>Ubuntu使用过程中遇到的问题</title>
    <link href="https://markdownimages.github.io/2017/06/08/Linux/Ubuntu%E4%BD%BF%E7%94%A8%E8%BF%87%E7%A8%8B%E4%B8%AD%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98/"/>
    <id>https://markdownimages.github.io/2017/06/08/Linux/Ubuntu使用过程中遇到的问题/</id>
    <published>2017-06-08T13:21:31.000Z</published>
    <updated>2017-06-12T13:26:25.558Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Ubuntu使用过程中遇到的问题"><a href="#Ubuntu使用过程中遇到的问题" class="headerlink" title="Ubuntu使用过程中遇到的问题"></a>Ubuntu使用过程中遇到的问题</h1><p>​</p>
<h2 id="遇到的坑"><a href="#遇到的坑" class="headerlink" title="遇到的坑"></a>遇到的坑</h2><h3 id="1-网线已经连接，ip也配置好了，但是无法上网。"><a href="#1-网线已经连接，ip也配置好了，但是无法上网。" class="headerlink" title="1.网线已经连接，ip也配置好了，但是无法上网。"></a>1.网线已经连接，ip也配置好了，但是无法上网。</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">sudo sysctl net.ipv4.conf.default.rp_filter=0</div><div class="line">sudo sysctl net.ipv4.conf.all.rp_filter=0</div><div class="line">sudo sysctl net.ipv4.ip_forward=1</div><div class="line">sudo sysctl net.ipv6.conf.all.forwarding=1</div></pre></td></tr></table></figure>
<p>或者直接追加到/etc/sysctl.conf</p>
<p>如果遇到“设备未托管”，一般是台式机默认移动ip后禁用网络。<br>那么修改/etc/NetworkManager/NetworkManager.conf，设置managed=true,reboot</p>
<p>有时候遇到即使改了上面四条仍旧无法连接网络，那么就是由于managed=true引起的，再改成false即可连接网页。</p>
<h3 id="2-安装了搜狗输入法之后，无法输入特殊符号，例如按下shift-8打不出"><a href="#2-安装了搜狗输入法之后，无法输入特殊符号，例如按下shift-8打不出" class="headerlink" title="2.安装了搜狗输入法之后，无法输入特殊符号，例如按下shift+8打不出*"></a>2.安装了搜狗输入法之后，无法输入特殊符号，例如按下shift+8打不出*</h3><p>1.到搜狗输入法的设置面板<br>2.点击高级-&gt;打开Fcitx设置。<br>3.看一下除了搜狗输入法以外的另一个输入法是什么，如果是<code>键盘(汉语)</code>或者<code>键盘(英语)</code>直接点击左下角的<code>-</code>号删掉，新增一个<code>键盘(美国)</code>。<br>这样就可以了。</p>
<h3 id="3-Ubuntu进入桌面后时不时闪屏"><a href="#3-Ubuntu进入桌面后时不时闪屏" class="headerlink" title="3.Ubuntu进入桌面后时不时闪屏"></a>3.Ubuntu进入桌面后时不时闪屏</h3><p>1.检查系统信息<br>首先，检查内核版本<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">uname -ra</div></pre></td></tr></table></figure></p>
<p>发现我的内核版本是4.8<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">x86_64</div></pre></td></tr></table></figure></p>
<p>表明系统是64位</p>
<p>2.下载内核<br>去这个网站下载<a href="http://kernel.ubuntu.com/~kernel-ppa/mainline/v4.11/" target="_blank" rel="external">内核</a>，我的电脑是64位系统，下载amd64的文件，32位的系统下载i386的内核。</p>
<p>3.安装内核<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo dpkg -i *.deb</div></pre></td></tr></table></figure></p>
<p>4.重启系统<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">reboot</div></pre></td></tr></table></figure></p>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="http://www.linuxdiyf.com/linux/13479.html" target="_blank" rel="external">ubuntu出现有线已连接却无法上网</a><br><a href="http://www.voidcn.com/blog/linxingqianglai/article/p-6081313.html" target="_blank" rel="external">ubuntu中shift键打不出特殊符号</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Ubuntu使用过程中遇到的问题&quot;&gt;&lt;a href=&quot;#Ubuntu使用过程中遇到的问题&quot; class=&quot;headerlink&quot; title=&quot;Ubuntu使用过程中遇到的问题&quot;&gt;&lt;/a&gt;Ubuntu使用过程中遇到的问题&lt;/h1&gt;&lt;p&gt;​&lt;/p&gt;
&lt;h2 id=&quot;
    
    </summary>
    
      <category term="Linux" scheme="https://markdownimages.github.io/categories/Linux/"/>
    
    
      <category term="Linux" scheme="https://markdownimages.github.io/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>ubuntu系统安装过程</title>
    <link href="https://markdownimages.github.io/2017/06/07/Linux/ubuntu%E7%B3%BB%E7%BB%9F%E5%AE%89%E8%A3%85%E8%BF%87%E7%A8%8B/"/>
    <id>https://markdownimages.github.io/2017/06/07/Linux/ubuntu系统安装过程/</id>
    <published>2017-06-07T12:21:31.000Z</published>
    <updated>2017-06-15T02:30:32.488Z</updated>
    
    <content type="html"><![CDATA[<h1 id="ubuntu系统安装过程"><a href="#ubuntu系统安装过程" class="headerlink" title="ubuntu系统安装过程"></a>ubuntu系统安装过程</h1><p>以下所有的安装都是基于奔着双系统安装的方法去的。</p>
<h2 id="一、分区"><a href="#一、分区" class="headerlink" title="一、分区"></a>一、分区</h2><p>装Ubuntu分配的硬盘大小最好是(20G以上）不要太小，这里请注意，Ubuntu和Windows文件系统完全不同，所以我们划好要给Ubuntu的分区后，删除卷。到时候，安装好的ubuntu的分区，在Windows下是看不到的，但是进入Ubuntu是可以访问Windows的磁盘的。这才叫双系统的吧，和wubi那种可不一样哦。</p>
<p>网上一搜就可以搜到怎么直接使用windows自带的磁盘工具完成分区的划分。这是网上的方法，本人亲测失败，还是用的屌屌的<a href="http://www.diskgenius.cn/" target="_blank" rel="external">diskgenius工具</a>完成。<br>具体步骤就不赘述了。</p>
<blockquote>
<p>NOTE<br>这边处理好之后 一定记得去磁盘管理那边将分区的部分<code>删掉卷</code>。</p>
</blockquote>
<h2 id="二、准备安装工具"><a href="#二、准备安装工具" class="headerlink" title="二、准备安装工具"></a>二、准备安装工具</h2><p>准备两个东西EasyBCD软件（<a href="http://linux.linuxidc.com/index.php?folder=cHViL7Oj08O5pL7fL0Vhc3lCQ0QgMi4zIMPit9HPwtTY" target="_blank" rel="external">EasyBCD 2.2</a> ）和ubuntu镜像（<a href="http://cn.ubuntu.com/download/" target="_blank" rel="external">Ubuntu 17.04版本</a>）。</p>
<h3 id="1-EasyBCD配置"><a href="#1-EasyBCD配置" class="headerlink" title="1.EasyBCD配置"></a>1.EasyBCD配置</h3><p><strong>第1步</strong>打开EasyBCD软件，可以看到现在我们的计算机只有一个启动“入口”，我们来给他加一个，第一步选择添加新条目（添加移动入口点）<br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="https://raw.githubusercontent.com/MarkdownImages/MarkdownImages/master/%E6%95%99%E7%A8%8B/Ubuntu%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B/12110319338232.png" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure></p>
<p><strong>第2步</strong>选NeoGrub，第3步点安装点保存 ，接着是配置（第4步）<br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="https://raw.githubusercontent.com/MarkdownImages/MarkdownImages/master/%E6%95%99%E7%A8%8B/Ubuntu%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B/12110319357200.png" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure></p>
<p>然后就会出现一个menu.lst文件<br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="https://raw.githubusercontent.com/MarkdownImages/MarkdownImages/master/%E6%95%99%E7%A8%8B/Ubuntu%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B/14041810078878.png" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure></p>
<p>我们要编辑这个文件 因为系统就是这个文件找到我们的Ubuntu的。把下面的 英文 复制进去，把原来的全覆盖掉</p>
<p>如果是32位的复制以下代码<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">title Install Ubuntu</div><div class="line">root (hd0,0)</div><div class="line">kernel (hd0,0)/vmlinuz boot=casper iso-scan/filename=/ubuntu-14.04-desktop-i386.iso ro quiet splash locale=zh_CN.UTF-8</div><div class="line">initrd (hd0,0)/initrd.lz</div></pre></td></tr></table></figure></p>
<p>如果是64位的复制以下代码<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">title Install Ubuntu</div><div class="line">root (hd0,0)</div><div class="line">kernel (hd0,0)/vmlinuz.efi boot=casper iso-scan/filename=/ubuntu-14.04-desktop-i386.iso ro quiet splash locale=zh_CN.UTF-8</div><div class="line">initrd (hd0,0)/initrd.lz</div></pre></td></tr></table></figure></p>
<p>区别就是第三行代码vmlinuz的尾缀。</p>
<p>关闭 保存。</p>
<p>说明：hd0表示c盘所处的硬盘号，一般电脑只有一个，所以都是hd0；如果有多个硬盘，则根据情况改为hd0、hd1等。<br>hd0后面的数字表示C盘在硬盘中的分区顺序，每个人的系统不大一样，不知道的可以在磁盘管理里面看一下，本人c盘是第三个分区，因此写为（hd0,2），如果是第一个，写为（hd0,0）即可。</p>
<blockquote>
<p>NOTE<br>ubuntu-14.04-desktop-i386.iso是你的iso的名字，别写成我的了，这个要改成你的。</p>
</blockquote>
<h3 id="1-iso镜像配置"><a href="#1-iso镜像配置" class="headerlink" title="1.iso镜像配置"></a>1.iso镜像配置</h3><p>下面把准备好的Ubuntu 14.04的iso镜像文件用压缩软件或者虚拟光驱打开，找到<code>casper</code>文件夹，把里面的<code>initrd.lz</code>和<code>vmlinuz</code>解压到C盘，然后在把整个iso文件复制到C盘根目录。</p>
<blockquote>
<p>NOTE<br>64位Ubuntu有细微的区别在于：</p>
<ol>
<li>vmlinuz这个文件，在64位iso里叫vmlinuz.efi，使用时把后缀去掉。</li>
<li>用EasyBCD配置引导文件时，注意64位Win7采用的是GPT分区表，所以，C盘不是(hd0,0)而是(hd0,1)——前提是你只有一块硬盘或你把Win7装在了主硬盘上，如果是装在了第二块硬盘上，那么C盘是(hd1,1)，是1而不是0的原因：GPT分区表默认隐藏了一个系统保留分区，100M，所以你的C盘不在0区而在1区。</li>
<li>64位Win7还会带来另一个问题，就是GPT分区的签名，如果不做任何处理，按照1+2两点你可以登入Ubuntu的体验版，但是通过桌面安装时，会发现在分区时无法识别你的Win7分区。所以还需要打开桌面安装前，打开终端，输入一行命令：<br>sudo dd if=/dev/zero of=/dev/sda bs=1 count=8 seek=512 目的是消除GPT分区表签名。</li>
</ol>
</blockquote>
<h2 id="三、安装"><a href="#三、安装" class="headerlink" title="三、安装"></a>三、安装</h2><p>重启。你就会看到有2个启动菜单给你选择，我们选择 <code>NeoGrub 引导加载器</code> 这个选项</p>
<h3 id="1-系统分区配置"><a href="#1-系统分区配置" class="headerlink" title="1.系统分区配置"></a>1.系统分区配置</h3><p><a href="https://github.com/MarkdownImages/MarkdownImages/blob/master/%E6%95%99%E7%A8%8B/Ubuntu%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B/Windows10%2BUbuntu%E5%8F%8C%E7%B3%BB%E7%BB%9F%E5%AE%89%E8%A3%85%5B%E5%A4%9A%E5%9B%BE%5D%20-%20%E7%AE%80%E4%B9%A6.zip" target="_blank" rel="external">分区配置</a></p>
<blockquote>
<p>NOTE<br>这里如果遇到进行分区时无法新建分区，首先要看下主分区有多少个，如果主分区过多就会出现这样的问题，把没用的主分区删掉或者更换成逻辑分区可以解决这个问题。</p>
</blockquote>
<h3 id="2-安装中断"><a href="#2-安装中断" class="headerlink" title="2.安装中断"></a>2.安装中断</h3><p>安装过程一直显示<code>正在探测文件系统...</code>使ubuntu系统无法继续安装。</p>
<p>解决方法：重启电脑，重新安装ubuntu之前，用“Ctrl+Alt+T”调出终端，然后运行<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo umount -l /isodevice</div></pre></td></tr></table></figure></p>
<p>然后再安装系统就可以正常安装了。</p>
<blockquote>
<p>NOTE<br>上面这步操作是在Ubuntu试用版上操作的。</p>
</blockquote>
<h2 id="四、重启"><a href="#四、重启" class="headerlink" title="四、重启"></a>四、重启</h2><p>重启后发现windows中的启动管理界面没有Ubuntu的引导</p>
<p>1.进入Ubuntu试用版环境<br>2.配置网络，联网<br>3.连接网络后我们打开终端，依次输入下面的内容，每行之后都要按回车<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">//第一行表示进入root账户模式</div><div class="line">sudo -i</div><div class="line">//第二行添加软件源并更新系统</div><div class="line">add-apt-repository ppa:yannubuntu/boot-repair &amp;&amp; apt-get update</div><div class="line">//第三行为安装boot-repair并在安装完成后启动软件</div><div class="line">apt-get install -y boot-repair &amp;&amp; boot-repair</div></pre></td></tr></table></figure></p>
<p>4.弹窗修复工具以后<br>我们点击第一个选项Recommended repair（推荐方案），剩下的软件会自己操作，不需要人为干预，视电脑配置，花费的时间不等。<br>5.中间会有一些中断操作的步骤，需要根据指令进行相关配置，配置结束后重启电脑，就可以了。<br>6.重启试试，终于进入到ubuntu的桌面了。<br>7.重启进入桌面以后，我们再次打开终端，更新下grub，防止修复不完善。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo update-grub</div></pre></td></tr></table></figure></p>
<p>最后，重启电脑确认下。或者根据自己的需求，进行下微调，都可以。</p>
<h2 id="五、安装成功"><a href="#五、安装成功" class="headerlink" title="五、安装成功"></a>五、安装成功</h2><p>进入桌面以后就需要进行自己的一些配置了。</p>
<h2 id="六、遇到问题"><a href="#六、遇到问题" class="headerlink" title="六、遇到问题"></a>六、遇到问题</h2><h3 id="1-安装完Linux后无开机引导，或者安装完win7、8后无开机引导，且出现grub-rescue-gt-字样"><a href="#1-安装完Linux后无开机引导，或者安装完win7、8后无开机引导，且出现grub-rescue-gt-字样" class="headerlink" title="1.安装完Linux后无开机引导，或者安装完win7、8后无开机引导，且出现grub rescue&gt;字样"></a>1.安装完Linux后无开机引导，或者安装完win7、8后无开机引导，且出现<code>grub rescue&gt;</code>字样</h3><p>1.先使用ls命令，找到Ubuntu的安装在哪个分区：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">grub rescue&gt;ls</div></pre></td></tr></table></figure></p>
<pre><code>会罗列所有的磁盘分区信息，比方说：
</code></pre><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">(hd0),(hd0,msdos3),(hd0,msdos2),(hd0,msdos1)</div></pre></td></tr></table></figure>
<p>2.然后依次调用如下命令： msdosX表示各个分区，注意 msdos 与 数字 之间没有空格！<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">grub rescue&gt;ls (hd0,msdosX)/boot/grub</div></pre></td></tr></table></figure></p>
<pre><code>如果都找不到的话，需要查一下是否因为Linux版本差异，造成grub的路径不对，
例如直接`ls(hd0,X)/grub`等等。
</code></pre><p>3.假设找到<code>（hd0,msdos3）</code>时，显示了文件夹中的文件，则表示 <code>Linux</code> 安装在这个分区。<br>4.调用如下命令：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">grub rescue&gt;set root=(hd0,msdos3)</div><div class="line">grub rescue&gt;set prefix=(hd0,msdos3)/boot/grub</div><div class="line">//这里调用这个命令可能会出现失败，原因是找不到normal.mod文件，所以这里具体情况要具体对待，像我的电脑就是`grub rescue&gt;insmod /boot/grub/i386-pc/normal.mod`</div><div class="line">grub rescue&gt;insmod /boot/grub/normal.mod</div></pre></td></tr></table></figure></p>
<p>5.然后调用如下命令，就可以显示出丢失的grub菜单了。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">grub rescue&gt;normal</div></pre></td></tr></table></figure></p>
<p>6.不过不要高兴，如果这时重启，问题依旧存在，我们需要进入Linux中，对grub进行修复。<br>    进入Linux之后，在命令行执行：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">sudo update-grub</div><div class="line">//（sda是你的硬盘号码，千万不要指定分区号码，例如sda1，sda5等都不对）</div><div class="line">sudo grub-install /dev/sda</div></pre></td></tr></table></figure></p>
<p>7.重启测试是否已经恢复了grub的启动菜单。</p>
<blockquote>
<p>NOTE<br>sudo gedit /boot/grub/grub.cfg 可以修改 grub 的引导菜单。</p>
</blockquote>
<h3 id="2-重装Win7后ubuntu启动项不见的解决方法"><a href="#2-重装Win7后ubuntu启动项不见的解决方法" class="headerlink" title="2.重装Win7后ubuntu启动项不见的解决方法"></a>2.重装Win7后ubuntu启动项不见的解决方法</h3><p>1.首先最重要的是你还能进入Ubuntu安装的体验版桌面，不管你是通过什么方式进入，硬盘安装还是U盘安装都可以。<br>2.<code>ctrl+alt+t</code>打开终端输入<code>sudo -i</code>(获得管理员权限)<br>输入<code>fdisk -l</code>(是小写的字母’L’，查看盘符列表)<br>会出现类似下面的信息:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">Disk /dev/sda: 320.1 GB, 320072933376 bytes </div><div class="line">　　　　255 heads, 63 sectors/track, 38913 cylinders </div><div class="line">　　　　Units = cylinders of 16065 * 512 = 8225280 bytes </div><div class="line">　　　　Disk identifier: 0x70f7ab9c</div><div class="line">　　　　Device    Boot    Start   End Blocks    Id   System </div><div class="line">　　　　/dev/sda1 1       1627     13060096     27   Unknown </div><div class="line">　　　　Partition 1       does not end on cylinder boundary. </div><div class="line">　　　　/dev/sda2 *       1627     1639102400   7    HPFS/NTFS </div><div class="line">　　　　Partition 2 does not end on cylinder boundary. </div><div class="line">　　　　/dev/sda3 1639     8166     52429859     7   HPFS/NTFS </div><div class="line">　　　　/dev/sda4 8167     38913    246975277+   5   Extended </div><div class="line">　　　　/dev/sda5 8167     32385    194539082+  7    HPFS/NTFS </div><div class="line">　　　　/dev/sda6 32386    38788    51432066    83   Linux </div><div class="line">　　　　/dev/sda7 38789    38913    1004031     82   linux swap / Solaris</div></pre></td></tr></table></figure></p>
<p> 然后找到<code>ID</code>为<code>83</code>的盘符，根据上面显示的信息可知当时装ubuntu时是装在sda6这个分区。有时会有多个83,可根据大小判断哪个是真正的分区<br>5.在终端输入<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">mount /dev/sda* /mnt</div><div class="line">mount /dev/sda* /mnt/boot</div></pre></td></tr></table></figure></p>
<blockquote>
<p>NOTE<br>1.*代表ubuntu系统所在的分区，即上一步显示结果中ID为83的分区号，如上面显示的是在sda6这个分区，所以输入的是mount /dev/sda6 /mnt<br>2.mount后面有一个空格，sda6后面也有一个空格，这两个空格千万不要漏掉，否则会报错</p>
</blockquote>
<p>6.上一步结束之后，继续在终端中输入<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">grub-install --root-directory=/mnt /dev/sda</div></pre></td></tr></table></figure></p>
<p>   等待一会儿，若出现Installationfinished,No Error Reported则表示成功了</p>
<blockquote>
<p>NOTE<br>grub-install之间没有空格，–root前面有一个空格，–root前面是两个’-‘，/mnt后面有一个空格</p>
</blockquote>
<p>7.到此，ubuntu引导基本恢复，重启电脑后，就可以看到熟悉的ubuntu引导界面了，进入ubuntu系统，打开终端输入<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo update-grub</div></pre></td></tr></table></figure></p>
<p>  等待片刻显示以下信息：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">Generating grub.cfg ... </div><div class="line">　　　　Found linux image: /boot/vmlinuz-2.6.31-20-generic </div><div class="line">　　　　Found initrd image: /boot/initrd.img-2.6.31-20-generic </div><div class="line">　　　　Found memtest86+ image: /boot/memtest86+.bin </div><div class="line">　　　　Found Windows Vista (loader) on /dev/sda1 </div><div class="line">　　　　Found Windows 7 (loader) on /dev/sda2 </div><div class="line">　　　　done</div></pre></td></tr></table></figure></p>
<p>   恢复工作便全部完成了。</p>
<h2 id="七、参考"><a href="#七、参考" class="headerlink" title="七、参考"></a>七、参考</h2><p><a href="http://www.linuxidc.com/Linux/2014-04/100369.htm" target="_blank" rel="external">Windows 7下硬盘安装Ubuntu 14.04图文教程</a><br><a href="http://jingyan.baidu.com/article/8ebacdf022413e49f65cd5d5.html" target="_blank" rel="external">Windows 7下硬盘安装Ubuntu14.04双系统的方法</a><br><a href="http://www.jianshu.com/p/2eebd6ad284d" target="_blank" rel="external">Ubuntu分区配置</a><br><a href="http://blog.csdn.net/hanshileiai/article/details/47071461" target="_blank" rel="external">ubuntu安装总是提示”正在探测文件系统”</a><br><a href="http://jingyan.baidu.com/article/5553fa82cd48a765a23934ae.html" target="_blank" rel="external">用Boot-repair修复双系统引导</a><br><a href="http://www.linuxidc.com/Linux/2012-07/65249.htm" target="_blank" rel="external">Ubuntu 开机出现 grub rescue&gt; 终端模式修复方法</a><br><a href="http://blog.csdn.net/ethan_xue/article/details/7538568" target="_blank" rel="external">重装Win7后ubuntu启动项不见的解决方法</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;ubuntu系统安装过程&quot;&gt;&lt;a href=&quot;#ubuntu系统安装过程&quot; class=&quot;headerlink&quot; title=&quot;ubuntu系统安装过程&quot;&gt;&lt;/a&gt;ubuntu系统安装过程&lt;/h1&gt;&lt;p&gt;以下所有的安装都是基于奔着双系统安装的方法去的。&lt;/p&gt;
&lt;
    
    </summary>
    
      <category term="Linux" scheme="https://markdownimages.github.io/categories/Linux/"/>
    
    
      <category term="Linux" scheme="https://markdownimages.github.io/tags/Linux/"/>
    
  </entry>
  
</feed>
