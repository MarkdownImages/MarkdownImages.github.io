{"meta":{"title":"ZXWalk","subtitle":"不忘初心 方得始终","description":"我是一只小小小小鸟......","author":"祥子","url":"https://markdownimages.github.io"},"pages":[{"title":"分类","date":"2017-06-12T07:19:16.613Z","updated":"2017-06-12T07:19:16.589Z","comments":false,"path":"categories/index.html","permalink":"https://markdownimages.github.io/categories/index.html","excerpt":"","text":""},{"title":"标签","date":"2017-06-12T07:19:37.580Z","updated":"2017-06-12T07:19:37.548Z","comments":false,"path":"tags/index.html","permalink":"https://markdownimages.github.io/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"git的使用","slug":"技术文档/iOS/工具/git的使用","date":"2017-06-19T09:44:31.000Z","updated":"2017-06-20T02:39:14.109Z","comments":true,"path":"2017/06/19/技术文档/iOS/工具/git的使用/","link":"","permalink":"https://markdownimages.github.io/2017/06/19/技术文档/iOS/工具/git的使用/","excerpt":"","text":"#git的使用 git是一款免费、开源的分布式版本控制系统，用于敏捷高效地处理任何或小或大的项目。Git是一个开源的分布式版本控制系统，用以有效、高速的 处理从很小到非常大的项目版本管理。 Git 是 Linus Torvalds 为了帮助管理 Linux 内核开发而开发的一个开放源码的版本控制软件。这里附上一个不错的学习git的网站 git 使用手册 一、配置git环境1.打开终端， 直接输入， 先检查系统是否已经存在SSH key1cat ~/.ssh/id_rsa.pub然后回车 2.不存在的话 创建一个新的SSH key， 这里一般使用的都是邮箱， 比如你的gitHub的邮箱呀什么的。1ssh-keygen -t rsa -C&quot;your_email@youremail.com&quot; 这里输入的过程中可能提示输入一个类似于密码的自定义的通行证号，如果直接回车则为空， 可能也会要你输入将要保存的路径，直接回车默认为当前路径。 3.创建成功之后， 在执行命令1拿到SSH key， 复制一下 Alt text 如图一长串的东西就是SSH Key 一定要记得复制的时候包括ssh-rsa 4.将SSH key输入到GitHub网站中（以将远程仓库建立在gitHub中为例） Alt text 如图设置一个标题， 然后把之前复制的一串东西粘贴进去就是了5.测试是否能够正确链接到github中，输入以下命令：1ssh -T git@github.com 将会显示一下信息1The authenticity of host &apos;github.com (207.97.227.239)&apos; can&apos;t be established. RSA key fingerprint is 16:27:ac:a5:76:28:2d:36:63:1b:56:4d:eb:df:a6:48. Are you sure you want to continue connecting (yes/no)? 输入yes后，显示出下列信息表示连接成功1Hi username! You&apos;ve successfully authenticated, but GitHub does not provide shell access. 二、配置git个人信息1.设置用户名和邮箱//配置名字1git config --global user.name&quot;Firstname Lastname&quot; //配置邮箱1git config --global user.email&quot;your_email@youremail.com&quot; //配置完以后检查配置是否正确1git config -l（这个是小写的L） Git通过检测用户名和邮箱来跟踪进行commit的用户， 所以需要配置一下， 以区分不同用户的提交信息， 一般都是多人开发嘛 三、新建一个git仓库的方法1.使用xcode自带的方法创建 Alt text 打开Xcode，创建一个新的工程 Alt text 选择下一步，在项目名中输入你要创建的项目的名字 Alt text 点击下一步，也就是最后一个步骤，在这里先选择一个要保持工程的目录，然后在窗口底部选上Create git repository on (My Mac )2.手动创建一个分支的方法 cd 你要创建的文件夹路径 git init Alt text 你会看到文件夹下有这样一个文件到这里你就完成了一个git仓库的建立。 四、将git仓库推送到远程1、添加远程服务器1git remote add origin git@github.com:gbyukg/zf-tutorial.git 2、将你的项目文件夹直接拖到SourceTree里面 Alt text 图中GitDemo所示 3、直接在图形化界面里面操作就是了， 第一步可以直接push， 将工程文件推送到服务器上面。 五、Xcode中的显示既然说到git主要用在代码的版本控制上， 那肯定与开发工具有着紧密的联系， 下面就来看一下， xcode上与git是怎么联系的 Alt text 常用的操作选项就是上面标出的地方。 Alt text 这里是去掉（回退）git操作记录的选项。 六、git常用命令虽然有SourceTree这样好用的图形化界面工具， 但是有些操作是它无法完成的， 或者说在上面操作容易出错的。下面介绍一下git操作常用的命令。 远程仓库相关命令1. 克隆一份代码到本地1cd 放置工程文件夹的目录 1git clone 代码的服务器的链接 克隆到本地之后， 以后就不用每次都用cd定位文件夹了， 可以直接在SourceTree上定位到当前仓库（SourceTree右上角的Terminal选项） 2. 查看远程仓库1git remote -v 3. 添加远程仓库12git remote add origin [url]//此处的origin可以换成其他的任意名字, 即创建的远程仓库的名字， 下面的操作都要以这个名字为准 4. 删除远程仓库1git remote rm origin 5. 拉取远程仓库1git pull origin [localBranchName] 6. 推送远程仓库1git push origin [localBranchName] github push错误：403 Forbidden12error: The requested URL returned error: 403 Forbidden while accessing https://github.com/wangz/future.git/info/refs git version 1.7.1 解决方案：12//cd到仓库下vim .git/config 修改12345[remote &quot;origin&quot;] url = https://github.com/wangz/example.git 为：[remote &quot;origin&quot;] url = https://wangz@github.com/wangz/example.git 再次git push，弹出框输入密码，即可提交 7. 添加某台电脑上的某个文件夹当做远程服务器1git remote add 电脑名字+电脑ip+电脑上的某个文件 使用这个命令是为了给当前仓库添加一个远程服务器， 所以， 你首先必须有一个本地的仓库。 Alt text 结果如下 Alt text 分支(branch)操作相关命令1. 查看本地分支1git branch 2. 查看远程分支1git branch -r 3. 创建本地分支1git branch [name] ----注意新分支创建后不会自动切换为当前分支 4. 切换分支1git checkout [name] 5. 创建新分支并立即切换到新分支1git checkout -b [name] 6. 删除分支1git branch -d [name] ---- -d选项只能删除已经参与了合并的分支，对于未有合并的分支是无法删除的。如果想强制删除一个分支，可以使用-D选项 7. 合并分支1git merge [name] ----将名称为[name]的分支与当前分支合并 8. 创建远程分支(本地分支push到远程)1git push origin [name] 9. 删除远程分支方式一：12 git push origin :[name]//如果省略 [本地分支]，那就等于是在说“在这里提取空白然后把它变成[远程分支]”,也就是删除了远程分支 方式二：1git push origin -d [name] ignore文件操作查看忽略文件1cat .gitignore 修改忽略文件1234567vi .gitignore这个指令是以只读的形式打开文件的,这个时候按键盘上的大部分按键都是无效的.如果想编写文件,需要下面的指令.//编写文件 开始编写的指令有两个,实现的效果是一样的.直接按键盘上的i或者a,这两个指令的作用都是让编辑器进入对文件的编辑状态//保存退出 在编辑状态按Esc键,会回到打开文件的状态,这个时候输入:wq(就是write And quite的意思)就会保存并退出Vi编辑器. 1.对已经提交过的文件执行ignore如果出现已经 commit 过的文件无法被忽略，那么需要执行： 12git rm &lt;FILENAME&gt;如果执行失败，则可能需要强制移除，执行git rm -r -f &lt;FILENAME&gt; 之后提交推送，此后 .gitignore 才会对此文件生效。原因是 .gitignore 只会对没有被 git 记录过的文件生效，也就是 untracked file。 2.对未commit的文件执行ignore直接执行上面的修改忽略文件就可以。 回退代码相关操作1. 回退代码到某个版本, 保留吐出的代码1git reset 1b30859 2. 回退代码到某个版本, 不保留吐出的代码1git reset --hard 1b30859 3. 回滚之前提交的某个点， 生成一个新的提交点1git revert 1b30859 如果这个点是之前merge的点，Git会抱怨：1is a merge but no -m option was given 这是因为你revert的那个commit是一个merge commit，它有两个parent, Git不知道base是选哪个parent，就没法diff，所以就抱怨了，所以你要显示告诉Git用哪一个parent。 一般来说，如果你在master上merge develop,那么parent 1就是master，parent 2就是develop. 所以你需要执行这样的revert命令:12//如果你现在在master上， 它的意思就是将这个点从master上回退掉git revert 1b30859 -m 1 此时使用下面命令可以详细查看相应的父分支的点：12git show 1b30859//Merge: 312a518 fa87415 //312a518和fa87415 可以在git log中找到对应的提交信息 revert点g的前后效果图：123a -&gt; b -&gt; c -&gt; f -- g -&gt; h (master) \\ / d -&gt; e (dev) 123a -&gt; b -&gt; c -&gt; f -- g -&gt; h -&gt; G (master) \\ / d -&gt; e (dev) 其中G 是撤销 g 生成的 commit。通过 git show G 之后，我们会发现 G 是一个常规提交，内容就是撤销 merge 时被丢弃的那条线索的所有commit 的「反操作」的合集。 4. 取消某次merge的内容1git merge --abort 分支编辑1. 如果当前分支既有未从远程pull下来的代码， 又有本地已经commit的代码， 即分支上出现一上一下箭头， 采用如下命令1git rebase origin/develop rebase的原理相当于三步： 1. 将我们的分支退回到上次和服务器同步时的状态 即 reset 2. 将reset之后的代码Stash一份 3. 与服务器进行同步，同步之后再将原来的Stash的代码吐出来和与服务器同步之后的代码进行合并 这样就不会造成下面的出现拐角的分支（也就是说我们在进行push的时候发现服务器里面有新代码，这时候不要执行pull命令。而是执行rebase命令则会将分支成一条直线） 2. 想在某条分支上移动某个分支123 A---B---C topic /D---E---F---G develop 例如有一条分支develop，topic是从develop上拉出来的分支，这时候我想把topic分支从E点移动到F点，那要怎么操作呢？ 第一步：先将分支切到F点，暂且叫做temp分支。 使用命令git rebase temp topic.此时topic分支会被移动到F点，且分支已被切换到topic分支，但是此时topic分支可能显示不正常有上下箭头，这是因为切换的这个topic分支已经不是原来的topic分支了，git创建了一个全新的分支并命名为topic，所以此时需要把远程的topic分支删掉，然后将本地的topic分支push到远程，则万事大吉了。 执行之后会得到如下的结果：123 A---B---C topic /D---E---F---G develop NOTEgit-rebase - Reapply commits on top of another base tip 3. 想将某条分支上拉出的分支移动到另一个分支的某个点12345 H---I---J topicB / E---F---G topicA /A---B---C---D develop 例如有一条分支develop，从develop上拉出了一条分支topicA，从topicA分支上拉出了一条分支topicB,此时如果我想将topicB分支移动到develop上的C点怎么操作呢？ 第一步：先将分支切到C点，暂且叫做temp分支。 使用命令git rebase --onto temp topicA topicB。意思就是将目前存在于topicA上的分支topicB移动到temp分支上，也就是移动到develop分支上的C点。 合并过程中如果有冲突则会立马停止，这时候要去解决冲突，解决完冲突之后使用命令rebase --continue继续分支分编辑操作。 注意一定要注意，如果分支像下面这样,12345 H---I---J topicB / \\ E---F---G---K---L---M---N---O---P topicA /A---B---C---D develop 此时想要将topicB分支移动到develop上的C点，就不能直接那么干了，不然你会发现坑大了，如果你还是按上面的操作，你会发现分支变成了下面这样：12345 E---F---G---K---L---M---N---O---P topicA /A---B---C---D develop \\ H---I---J---M---N---O---P topicB 为什么会这样呢？推测：git rebase --onto temp topicA topicB这个命令可能是把topicA从topicB分支上的起始点开始到终点（露头的点），也就是包含topicB上的几个点。 NOTE对于想要使用git rebase --onto temp topicA topicB该命令一定是露头的分支，不能是起始点在某个分支上，同时该分支也被merge到了该分支上。如果是这样的就需要先把该分支已经merge的点退掉，将需要迁移的分支漏出来，再进行编辑。（怀疑如果是merge到了其他分支上应该是没问题的，这个没试过，暂不确定） 参考：git-rebase - Reapply commits on top of another base tip 其他操作1. 想要对之前已经进行过git ignore操作的文件再次添加进git管理中， 执行如下操作1git add 文件路径 -f 2. 强制push某个点到远程1git push --force origin develop 此命令小心使用 3. 第一次将从某个分支拉出来的分支合到这个分支上的时候， 容易出现拉成直线的情况， 这时候要执行下面的操作1git merge --no-ff -m &quot;货基转股基_4.90.01&quot; 货基转股基_4.90.01 这句命令的意思就是：(假设目前在develop分支上) 这是第一次merge, 我想要把 货基转股基_4.90.01 分支merge到develop分支上。 --no-ff参数，表示禁用Fast forward, 因为本次合并要创建一个新的commit，所以加上-m参数，把commit描述写进去。 这里还有一种简单的方法， 直接在界面操作 Alt text 第一次merge的时候只要打上这个勾勾就可以了。 4. 删除本地SourceTree中远程分支目录里面已经被删除的分支1git fetch -p 它的意思就是在fetch之后删除掉没有与远程分支对应的本地分支。 5. 重命名远程分支在git中重命名远程分支，其实就是先删除远程分支，然后重命名本地分支，再重新提交一个远程分支。 6. 从Git仓库中恢复已删除的分支或丢失的commit使用这条命令的前提是你曾经将这个点提交过或者push过 7. 关于vim窗口的使用开始用git commit 提交的时候是用 -m “message”的 后来直接用git commit 回车后弹出一个窗口，后来才知道是linux下的文本编辑器 郁闷的是半天退出不出来，baidu，google一番， 进入之后是VIM的普通模式，按 i 键，进入INSERT模式，这是可以输入message了。 输入完成之后，按ESC键进入命令模式 ，输入冒号（在窗口下面显示），然后输入x，回车就OK了。 8. 解决github push错误The requested URL returned error: 403 Forbidden while accessingcd到你的代码路径下1vim .Git/config 修改12[remote &quot;origin&quot;] url = https://github.com/wangxiusen/wangxiusen.github.io.git 为12[remote &quot;origin&quot;] url = https://wangxiusen@github.com/wangxiusen/wangxiusen.github.io.git 然后ESC :wq保存退出。再次git push，弹出框输入密码，即可提交。 七、git命令合集一张酷图帮你收集齐所有git命令 Alt text","categories":[{"name":"工具","slug":"工具","permalink":"https://markdownimages.github.io/categories/工具/"}],"tags":[{"name":"git","slug":"git","permalink":"https://markdownimages.github.io/tags/git/"}]},{"title":"Linux下搭建Hexo博客","slug":"Hexo/Linux下搭建Hexo博客","date":"2017-06-15T02:21:31.000Z","updated":"2017-06-19T09:36:10.325Z","comments":true,"path":"2017/06/15/Hexo/Linux下搭建Hexo博客/","link":"","permalink":"https://markdownimages.github.io/2017/06/15/Hexo/Linux下搭建Hexo博客/","excerpt":"","text":"# Linux下搭建Hexo博客 1.安装Node.js-4.4.4这里4.4.4是目前的稳定版，你可以去官网下载最新的稳定版下载 下载1wget https://nodejs.org/dist/v4.4.4/node-v4.4.4-linux-x64.tar.xz 解压1xz -d node-v4.4.4-linux-x64.tar.xz tar -xvf node-v4.4.4-linux-x64.tar 安装1234//新建文件夹并移动mv node-v4.4.4-linux-x64 node-v4.4.4//将node.js解压的文件移动到系统目录mv node-v4.4.4 /usr/local/node 配置环境变量123456789# 编辑 /etc/profile (使用vim)vim /etc/profile# 在底部添加 PATH 变量export PATH=$PATH:/usr/local/node/bin# 保存退出，先按exit键，再按shift+:wq# 最后保存，使其生效即可source /etc/profile验证，命令行输入npm -version,安装成功会输出版本号 2.安装Hexo安装这个可以不使用root用户，但是全局安装时需要管理员权限，现在目录依旧是/home/Zing下，用户是Zing1234567891011安装Git(已安装可跳过)apt-get install git安装hexo# 创建目录mkdir hexo# 切换目录cd hexo# 全局安装 Hexo，需要最高权限，记得输入root密码sudo npm install -g hexo-cli# 初始化 Hexohexo init 安装插件12345678910111213npm install hexo-generator-index --savenpm install hexo-generator-archive --savenpm install hexo-generator-category --savenpm install hexo-generator-tag --savenpm install hexo-server --savenpm install hexo-deployer-git --savenpm install hexo-deployer-heroku --savenpm install hexo-deployer-rsync --savenpm install hexo-deployer-openshift --savenpm install hexo-renderer-marked --savenpm install hexo-renderer-stylus --savenpm install hexo-generator-feed --savenpm install hexo-generator-sitemap --save 测试安装成功1hexo server 成成功会有下图提示：123(node:6520) [DEP0061] DeprecationWarning: fs.SyncWriteStream is deprecated.INFO Start processingINFO Hexo is running at http://localhost:4000/. Press Ctrl+C to stop. 成功！ 没有提示，请重新安装浏览器输入 http://0.0.0.0:4000 可以访问到首页 修改Hexo配置文件123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778# Hexo Configuration## Docs: https://hexo.io/docs/configuration.html## Source: https://github.com/hexojs/hexo/# Site 站点信息设置title: ZXWalksubtitle: 不忘初心 方得始终description: 我是一只小小小小鸟......author: 祥子language: zh-CNtimezone:# URL 链接设置## If your site is put in a subdirectory, set url as &apos;http://yoursite.com/child&apos; and root as &apos;/child/&apos;url: https://markdownimages.github.ioroot: /permalink: :year/:month/:day/:title/permalink_defaults:# Directory 文件目录source_dir: sourcepublic_dir: publictag_dir: tagsarchive_dir: archivescategory_dir: categoriescode_dir: downloads/codei18n_dir: :langskip_render:# Writing 文章new_post_name: :title.md # File name of new postsdefault_layout: posttitlecase: false # Transform title into titlecaseexternal_link: true # Open external links in new tabfilename_case: 0render_drafts: falsepost_asset_folder: falserelative_link: falsefuture: truehighlight: enable: true line_number: true auto_detect: false tab_replace:# Category &amp; Tagdefault_category: uncategorizedcategory_map:tag_map:# Date / Time format 日期## Hexo uses Moment.js to parse and display date## You can customize the date format as defined in## http://momentjs.com/docs/#/displaying/format/date_format: YYYY-MM-DDtime_format: HH:mm:ss# Pagination 分页## Set per_page to 0 to disable paginationper_page: 8pagination_dir: page# Extensions 扩展## Plugins: https://hexo.io/plugins/## Themes: https://hexo.io/themes/theme: indigo# Deployment 这里设置了Git获#这里一定要注意不要写错了，否则部署到Github上会出问题## Docs: https://hexo.io/docs/deployment.htmldeploy: type: git repo: github: git@github.com:MarkdownImages/MarkdownImages.github.io.git coding: https://git.coding.net/ZXWalk/ZXWalk.git branch: master# repo: https://git.oschina.net/XZwalk/zxwalk.git message: &apos;站点更新:&#123;&#123;now(&quot;YYYY-MM-DD HH/mm/ss&quot;)&#125;&#125;&apos; 3.部署到github12345初始化Git设置（设置用户名和邮箱）生成SSH秘钥将，SSH秘钥配置到github上在github上创建 用户名.github.io的仓库。并且编辑Hexo的_config.yml文件，配置好git提交仓库地址编译Hexo的MarkDown 文章，部署到github上用户名一定是你github上的用户名！切记！ 编译12//可以简化为hexo ghexo generate 发布12//可以简化为hexo dhexo deploy 4.选择主题安装主题NexT1git clone https://github.com/iissnan/hexo-theme-next themes/next 并在目录hexo下的_config.yml中12# 找到 theme: 修改后面的参数，默认是 landscapetheme: next 找主题https://hexo.io/themes/ 遇到问题1. 安装插件的时候提示更新npm如果node不是最新的，node有一个模块叫n，是专门用来管理node.js的版本的。使用npm（NPM是随同nodejs一起安装的包管理工具）安装n模块1sudo npm install -g n 然后，升级node.js到最新稳定版1sudo n stable 执行上面的命令的时候报错12sudo: npm：找不到命令执行命令sudo apt-get install npm 即可 2.hexo deploy时重复输入用户名密码的问题最主要的原因可能是你木有采用git@github.com而是用https//github.com。修改后重新提交部署即可。 常用命令1234567891011//新建一篇文章hexo new &quot;My New Post&quot;//测试hexo server//编译hexo g//发布hexo d 参考在Ubuntu下安装Node.JS的不同方式Ubuntu下搭建Hexo + github 博客CentOS下搭建Hexo + github 博客","categories":[{"name":"Hexo","slug":"Hexo","permalink":"https://markdownimages.github.io/categories/Hexo/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"https://markdownimages.github.io/tags/Linux/"}]},{"title":"Ubuntu安装常用软件","slug":"Linux/Ubuntu安装常用软件","date":"2017-06-10T13:21:31.000Z","updated":"2017-06-15T02:30:08.529Z","comments":true,"path":"2017/06/10/Linux/Ubuntu安装常用软件/","link":"","permalink":"https://markdownimages.github.io/2017/06/10/Linux/Ubuntu安装常用软件/","excerpt":"","text":"Ubuntu安装常用软件安装软件1.安装搜狗输入法Linux版的搜狗输入法和Fcitx有冲突，在安装前移除fcitx：123//这里的命令就是*sudo apt remove fcitx*sudo apt autoremove 下载安装包，搜狗提供32位和64位版：http://pinyin.sogou.com/linux/?r=pinyin 可以直接双击下载的deb包安装，或执行命令：12sudo dpkg -i sogoupinyin*.debsudo apt -f install 安装完成之后，重启系统。 2.安装git安装配置git服务器：（1）安装ssh：sudo apt-get install openssh-server openssh-client（2）启动ssh服务：sudo /etc/init.d/ssh restart（3）安装git服务器：sudo apt-get install git-core 配置ssh公钥（1）本地生成ssh公钥：ssh-keygen -C &#39;你的邮箱地址&#39; -t rsa。 NOTE这条命令会在当前用户目录~/.ssh/下生成密钥文件。 (2) 查看ssh key，可以使用cat ~/.ssh/id_rsa.pub命令。 每次提交都输入密码的解决办法（1）cd 回车；进入当前用户目录下；（2）vim .git-credentials （如果没有安装vim 用其它编辑器也可以或 sudo apt-get install vim 安装一个）（3）按照以下格式输入内容：12//其中username，password，github.com 都换成你自己的内容https://&#123;username&#125;：&#123;password&#125;@github.com （4）保存退出后执行下面命令1git config --global credential.helper store 解决github push错误The requested URL returned error: 403 Forbidden while accessingcd到你的代码路径下1vim .Git/config 修改12[remote &quot;origin&quot;] url = https://github.com/wangxiusen/wangxiusen.github.io.git 为12[remote &quot;origin&quot;] url = https://wangxiusen@github.com/wangxiusen/wangxiusen.github.io.git 然后ESC :wq保存退出。 再次git push，弹出框输入密码，即可提交。 3.安装谷歌浏览器1.在终端中，输入以下命令：1sudo wget http://www.linuxidc.com/files/repo/google-chrome.list -P /etc/apt/sources.list.d/ 将下载源加入到系统的源列表。 NOTE如果返回“地址解析错误”等信息，可以百度搜索其他提供 Chrome 下载的源，用其地址替换掉命令中的地址。 2.在终端中，输入以下命令：1wget -q -O - https://dl.google.com/linux/linux_signing_key.pub | sudo apt-key add - 导入谷歌软件的公钥，用于下面步骤中对下载软件进行验证。如果顺利的话，命令将返回“OK”。 3.在终端中，输入以下命令：1sudo apt-get update 用于对当前系统的可用更新列表进行更新。这也是许多 Linux 发行版经常需要执行的操作，目的是随时获得最新的软件版本信息。 4.在终端中，输入以下命令：1sudo apt-get install google-chrome-stable 执行对谷歌 Chrome 浏览器（稳定版）的安装。 5.最后，如果一切顺利，在终端中执行以下命令：1/usr/bin/google-chrome-stable 将会启动谷歌 Chrome 浏览器，它的图标将会出现在屏幕左侧的 Launcher上，在图标上右键——“锁定到启动器”，以后就可以简单地单击启动了。也可以将图标托往屏幕左侧的 Launcher 上. 参考Ubuntu 16.04安装搜狗输入法git安装Ubuntu系统中git每次提交都要输入密码怎么办？Ubuntu 16.04下安装64位谷歌Chrome浏览器","categories":[{"name":"Linux","slug":"Linux","permalink":"https://markdownimages.github.io/categories/Linux/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"https://markdownimages.github.io/tags/Linux/"}]},{"title":"Ubuntu使用过程中遇到的问题","slug":"Linux/Ubuntu使用过程中遇到的问题","date":"2017-06-08T13:21:31.000Z","updated":"2017-06-12T13:26:25.558Z","comments":true,"path":"2017/06/08/Linux/Ubuntu使用过程中遇到的问题/","link":"","permalink":"https://markdownimages.github.io/2017/06/08/Linux/Ubuntu使用过程中遇到的问题/","excerpt":"","text":"Ubuntu使用过程中遇到的问题​ 遇到的坑1.网线已经连接，ip也配置好了，但是无法上网。1234sudo sysctl net.ipv4.conf.default.rp_filter=0sudo sysctl net.ipv4.conf.all.rp_filter=0sudo sysctl net.ipv4.ip_forward=1sudo sysctl net.ipv6.conf.all.forwarding=1 或者直接追加到/etc/sysctl.conf 如果遇到“设备未托管”，一般是台式机默认移动ip后禁用网络。那么修改/etc/NetworkManager/NetworkManager.conf，设置managed=true,reboot 有时候遇到即使改了上面四条仍旧无法连接网络，那么就是由于managed=true引起的，再改成false即可连接网页。 2.安装了搜狗输入法之后，无法输入特殊符号，例如按下shift+8打不出*1.到搜狗输入法的设置面板2.点击高级-&gt;打开Fcitx设置。3.看一下除了搜狗输入法以外的另一个输入法是什么，如果是键盘(汉语)或者键盘(英语)直接点击左下角的-号删掉，新增一个键盘(美国)。这样就可以了。 3.Ubuntu进入桌面后时不时闪屏1.检查系统信息首先，检查内核版本1uname -ra 发现我的内核版本是4.81x86_64 表明系统是64位 2.下载内核去这个网站下载内核，我的电脑是64位系统，下载amd64的文件，32位的系统下载i386的内核。 3.安装内核1sudo dpkg -i *.deb 4.重启系统1reboot 参考ubuntu出现有线已连接却无法上网ubuntu中shift键打不出特殊符号","categories":[{"name":"Linux","slug":"Linux","permalink":"https://markdownimages.github.io/categories/Linux/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"https://markdownimages.github.io/tags/Linux/"}]},{"title":"ubuntu系统安装过程","slug":"Linux/ubuntu系统安装过程","date":"2017-06-07T12:21:31.000Z","updated":"2017-06-15T02:30:32.488Z","comments":true,"path":"2017/06/07/Linux/ubuntu系统安装过程/","link":"","permalink":"https://markdownimages.github.io/2017/06/07/Linux/ubuntu系统安装过程/","excerpt":"","text":"ubuntu系统安装过程以下所有的安装都是基于奔着双系统安装的方法去的。 一、分区装Ubuntu分配的硬盘大小最好是(20G以上）不要太小，这里请注意，Ubuntu和Windows文件系统完全不同，所以我们划好要给Ubuntu的分区后，删除卷。到时候，安装好的ubuntu的分区，在Windows下是看不到的，但是进入Ubuntu是可以访问Windows的磁盘的。这才叫双系统的吧，和wubi那种可不一样哦。 网上一搜就可以搜到怎么直接使用windows自带的磁盘工具完成分区的划分。这是网上的方法，本人亲测失败，还是用的屌屌的diskgenius工具完成。具体步骤就不赘述了。 NOTE这边处理好之后 一定记得去磁盘管理那边将分区的部分删掉卷。 二、准备安装工具准备两个东西EasyBCD软件（EasyBCD 2.2 ）和ubuntu镜像（Ubuntu 17.04版本）。 1.EasyBCD配置第1步打开EasyBCD软件，可以看到现在我们的计算机只有一个启动“入口”，我们来给他加一个，第一步选择添加新条目（添加移动入口点） 第2步选NeoGrub，第3步点安装点保存 ，接着是配置（第4步） 然后就会出现一个menu.lst文件 我们要编辑这个文件 因为系统就是这个文件找到我们的Ubuntu的。把下面的 英文 复制进去，把原来的全覆盖掉 如果是32位的复制以下代码1234title Install Ubunturoot (hd0,0)kernel (hd0,0)/vmlinuz boot=casper iso-scan/filename=/ubuntu-14.04-desktop-i386.iso ro quiet splash locale=zh_CN.UTF-8initrd (hd0,0)/initrd.lz 如果是64位的复制以下代码1234title Install Ubunturoot (hd0,0)kernel (hd0,0)/vmlinuz.efi boot=casper iso-scan/filename=/ubuntu-14.04-desktop-i386.iso ro quiet splash locale=zh_CN.UTF-8initrd (hd0,0)/initrd.lz 区别就是第三行代码vmlinuz的尾缀。 关闭 保存。 说明：hd0表示c盘所处的硬盘号，一般电脑只有一个，所以都是hd0；如果有多个硬盘，则根据情况改为hd0、hd1等。hd0后面的数字表示C盘在硬盘中的分区顺序，每个人的系统不大一样，不知道的可以在磁盘管理里面看一下，本人c盘是第三个分区，因此写为（hd0,2），如果是第一个，写为（hd0,0）即可。 NOTEubuntu-14.04-desktop-i386.iso是你的iso的名字，别写成我的了，这个要改成你的。 1.iso镜像配置下面把准备好的Ubuntu 14.04的iso镜像文件用压缩软件或者虚拟光驱打开，找到casper文件夹，把里面的initrd.lz和vmlinuz解压到C盘，然后在把整个iso文件复制到C盘根目录。 NOTE64位Ubuntu有细微的区别在于： vmlinuz这个文件，在64位iso里叫vmlinuz.efi，使用时把后缀去掉。 用EasyBCD配置引导文件时，注意64位Win7采用的是GPT分区表，所以，C盘不是(hd0,0)而是(hd0,1)——前提是你只有一块硬盘或你把Win7装在了主硬盘上，如果是装在了第二块硬盘上，那么C盘是(hd1,1)，是1而不是0的原因：GPT分区表默认隐藏了一个系统保留分区，100M，所以你的C盘不在0区而在1区。 64位Win7还会带来另一个问题，就是GPT分区的签名，如果不做任何处理，按照1+2两点你可以登入Ubuntu的体验版，但是通过桌面安装时，会发现在分区时无法识别你的Win7分区。所以还需要打开桌面安装前，打开终端，输入一行命令：sudo dd if=/dev/zero of=/dev/sda bs=1 count=8 seek=512 目的是消除GPT分区表签名。 三、安装重启。你就会看到有2个启动菜单给你选择，我们选择 NeoGrub 引导加载器 这个选项 1.系统分区配置分区配置 NOTE这里如果遇到进行分区时无法新建分区，首先要看下主分区有多少个，如果主分区过多就会出现这样的问题，把没用的主分区删掉或者更换成逻辑分区可以解决这个问题。 2.安装中断安装过程一直显示正在探测文件系统...使ubuntu系统无法继续安装。 解决方法：重启电脑，重新安装ubuntu之前，用“Ctrl+Alt+T”调出终端，然后运行1sudo umount -l /isodevice 然后再安装系统就可以正常安装了。 NOTE上面这步操作是在Ubuntu试用版上操作的。 四、重启重启后发现windows中的启动管理界面没有Ubuntu的引导 1.进入Ubuntu试用版环境2.配置网络，联网3.连接网络后我们打开终端，依次输入下面的内容，每行之后都要按回车123456//第一行表示进入root账户模式sudo -i//第二行添加软件源并更新系统add-apt-repository ppa:yannubuntu/boot-repair &amp;&amp; apt-get update//第三行为安装boot-repair并在安装完成后启动软件apt-get install -y boot-repair &amp;&amp; boot-repair 4.弹窗修复工具以后我们点击第一个选项Recommended repair（推荐方案），剩下的软件会自己操作，不需要人为干预，视电脑配置，花费的时间不等。5.中间会有一些中断操作的步骤，需要根据指令进行相关配置，配置结束后重启电脑，就可以了。6.重启试试，终于进入到ubuntu的桌面了。7.重启进入桌面以后，我们再次打开终端，更新下grub，防止修复不完善。1sudo update-grub 最后，重启电脑确认下。或者根据自己的需求，进行下微调，都可以。 五、安装成功进入桌面以后就需要进行自己的一些配置了。 六、遇到问题1.安装完Linux后无开机引导，或者安装完win7、8后无开机引导，且出现grub rescue&gt;字样1.先使用ls命令，找到Ubuntu的安装在哪个分区：1grub rescue&gt;ls 会罗列所有的磁盘分区信息，比方说： 1(hd0),(hd0,msdos3),(hd0,msdos2),(hd0,msdos1) 2.然后依次调用如下命令： msdosX表示各个分区，注意 msdos 与 数字 之间没有空格！1grub rescue&gt;ls (hd0,msdosX)/boot/grub 如果都找不到的话，需要查一下是否因为Linux版本差异，造成grub的路径不对， 例如直接`ls(hd0,X)/grub`等等。 3.假设找到（hd0,msdos3）时，显示了文件夹中的文件，则表示 Linux 安装在这个分区。4.调用如下命令：1234grub rescue&gt;set root=(hd0,msdos3)grub rescue&gt;set prefix=(hd0,msdos3)/boot/grub//这里调用这个命令可能会出现失败，原因是找不到normal.mod文件，所以这里具体情况要具体对待，像我的电脑就是`grub rescue&gt;insmod /boot/grub/i386-pc/normal.mod`grub rescue&gt;insmod /boot/grub/normal.mod 5.然后调用如下命令，就可以显示出丢失的grub菜单了。1grub rescue&gt;normal 6.不过不要高兴，如果这时重启，问题依旧存在，我们需要进入Linux中，对grub进行修复。 进入Linux之后，在命令行执行：123sudo update-grub//（sda是你的硬盘号码，千万不要指定分区号码，例如sda1，sda5等都不对）sudo grub-install /dev/sda 7.重启测试是否已经恢复了grub的启动菜单。 NOTEsudo gedit /boot/grub/grub.cfg 可以修改 grub 的引导菜单。 2.重装Win7后ubuntu启动项不见的解决方法1.首先最重要的是你还能进入Ubuntu安装的体验版桌面，不管你是通过什么方式进入，硬盘安装还是U盘安装都可以。2.ctrl+alt+t打开终端输入sudo -i(获得管理员权限)输入fdisk -l(是小写的字母’L’，查看盘符列表)会出现类似下面的信息:1234567891011121314Disk /dev/sda: 320.1 GB, 320072933376 bytes 255 heads, 63 sectors/track, 38913 cylinders Units = cylinders of 16065 * 512 = 8225280 bytes Disk identifier: 0x70f7ab9c Device Boot Start End Blocks Id System /dev/sda1 1 1627 13060096 27 Unknown Partition 1 does not end on cylinder boundary. /dev/sda2 * 1627 1639102400 7 HPFS/NTFS Partition 2 does not end on cylinder boundary. /dev/sda3 1639 8166 52429859 7 HPFS/NTFS /dev/sda4 8167 38913 246975277+ 5 Extended /dev/sda5 8167 32385 194539082+ 7 HPFS/NTFS /dev/sda6 32386 38788 51432066 83 Linux /dev/sda7 38789 38913 1004031 82 linux swap / Solaris 然后找到ID为83的盘符，根据上面显示的信息可知当时装ubuntu时是装在sda6这个分区。有时会有多个83,可根据大小判断哪个是真正的分区5.在终端输入12mount /dev/sda* /mntmount /dev/sda* /mnt/boot NOTE1.*代表ubuntu系统所在的分区，即上一步显示结果中ID为83的分区号，如上面显示的是在sda6这个分区，所以输入的是mount /dev/sda6 /mnt2.mount后面有一个空格，sda6后面也有一个空格，这两个空格千万不要漏掉，否则会报错 6.上一步结束之后，继续在终端中输入1grub-install --root-directory=/mnt /dev/sda 等待一会儿，若出现Installationfinished,No Error Reported则表示成功了 NOTEgrub-install之间没有空格，–root前面有一个空格，–root前面是两个’-‘，/mnt后面有一个空格 7.到此，ubuntu引导基本恢复，重启电脑后，就可以看到熟悉的ubuntu引导界面了，进入ubuntu系统，打开终端输入1sudo update-grub 等待片刻显示以下信息：1234567Generating grub.cfg ... Found linux image: /boot/vmlinuz-2.6.31-20-generic Found initrd image: /boot/initrd.img-2.6.31-20-generic Found memtest86+ image: /boot/memtest86+.bin Found Windows Vista (loader) on /dev/sda1 Found Windows 7 (loader) on /dev/sda2 done 恢复工作便全部完成了。 七、参考Windows 7下硬盘安装Ubuntu 14.04图文教程Windows 7下硬盘安装Ubuntu14.04双系统的方法Ubuntu分区配置ubuntu安装总是提示”正在探测文件系统”用Boot-repair修复双系统引导Ubuntu 开机出现 grub rescue&gt; 终端模式修复方法重装Win7后ubuntu启动项不见的解决方法","categories":[{"name":"Linux","slug":"Linux","permalink":"https://markdownimages.github.io/categories/Linux/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"https://markdownimages.github.io/tags/Linux/"}]}]}